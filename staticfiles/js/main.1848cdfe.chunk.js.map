{"version":3,"sources":["constants/userConstants.js","constants/boardConstants.js","constants/weekConstants.js","constants/taskConstants.js","store.js","reducers/userReducers.js","reducers/boardReducers.js","reducers/weekReducers.js","reducers/taskReducers.js","components/Loader.js","actions/boardActions.js","components/AddBoard.js","components/DeleteClassPopup.js","components/DeleteBoardPopup.js","components/EditBoard.js","components/Board.js","components/BoardContainer.js","screens/BoardScreen.js","actions/userActions.js","screens/LoginScreen.js","screens/RegisterScreen.js","actions/taskActions.js","helper_functions/getWeekDays.js","components/Week.js","actions/weekActions.js","components/WeekContainer.js","components/AddWeek.js","components/DeleteWeekPopup.js","components/EditWeek.js","screens/BoardViewScreen.js","components/TaskDropdown.js","components/Task.js","components/Day.js","components/DayContainer.js","components/AddTask.js","components/EditTask.js","screens/WeekScreen.js","components/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","BOARD_CREATE_REQUEST","BOARD_CREATE_SUCCESS","BOARD_CREATE_FAIL","BOARD_CREATE_RESET","BOARD_LIST_REQUEST","BOARD_LIST_SUCCESS","BOARD_LIST_FAIL","BOARD_TO_EDIT_REQUEST","BOARD_TO_EDIT_SUCCESS","BOARD_TO_EDIT_FAIL","BOARD_TO_EDIT_RESET","BOARD_SHOW_EDIT","BOARD_TO_EDIT_CLASSES_REQUEST","BOARD_TO_EDIT_CLASSES_SUCCESS","BOARD_TO_EDIT_CLASSES_FAIL","BOARD_DELETE_CLASS_REQUEST","BOARD_DELETE_CLASS_SUCCESS","BOARD_DELETE_CLASS_FAIL","CLASS_TO_DELETE_REQUEST","CLASS_TO_DELETE_SUCCESS","CLASS_TO_DELETE_FAIL","BOARD_UPDATE_REQUEST","BOARD_UPDATE_SUCCESS","BOARD_UPDATE_FAIL","BOARD_DELETE_REQUEST","BOARD_DELETE_SUCCESS","BOARD_DELETE_FAIL","BOARD_VIEW_REQUEST","BOARD_VIEW_SUCCESS","BOARD_VIEW_FAIL","WEEK_LIST_REQUEST","WEEK_LIST_SUCCESS","WEEK_LIST_FAIL","WEEK_ADD_REQUEST","WEEK_ADD_SUCCESS","WEEK_ADD_FAIL","WEEK_TO_EDIT_REQUEST","WEEK_TO_EDIT_SUCCESS","WEEK_TO_EDIT_FAIL","WEEK_TO_EDIT_RESET","WEEK_DELETE_REQUEST","WEEK_DELETE_SUCCESS","WEEK_DELETE_FAIL","WEEK_UPDATE_REQUEST","WEEK_UPDATE_SUCCESS","WEEK_UPDATE_FAIL","WEEK_VIEW_REQUEST","WEEK_VIEW_SUCCESS","WEEK_VIEW_FAIL","WEEK_DAYS","WEEK_CLASSES_REQUEST","WEEK_CLASSES_SUCCESS","WEEK_CLASSES_FAIL","TASK_LIST_REQUEST","TASK_LIST_SUCCESS","TASK_LIST_FAIL","MONDAY_TASKS_REQUEST","MONDAY_TASKS_SUCCESS","MONDAY_TASKS_FAIL","TUESDAY_TASKS_REQUEST","TUESDAY_TASKS_SUCCESS","TUESDAY_TASKS_FAIL","WEDNESDAY_TASKS_REQUEST","WEDNESDAY_TASKS_SUCCESS","WEDNESDAY_TASKS_FAIL","THURSDAY_TASKS_REQUEST","THURSDAY_TASKS_SUCCESS","THURSDAY_TASKS_FAIL","FRIDAY_TASKS_REQUEST","FRIDAY_TASKS_SUCCESS","FRIDAY_TASKS_FAIL","SATURDAY_TASKS_REQUEST","SATURDAY_TASKS_SUCCESS","SATURDAY_TASKS_FAIL","SUNDAY_TASKS_REQUEST","SUNDAY_TASKS_SUCCESS","SUNDAY_TASKS_FAIL","TASK_CREATE_REQUEST","TASK_CREATE_SUCCESS","TASK_CREATE_FAIL","TASK_DELETE_REQUEST","TASK_DELETE_SUCCESS","TASK_DELETE_FAIL","TASK_TO_EDIT_REQUEST","TASK_TO_EDIT_SUCCESS","TASK_TO_EDIT_FAIL","TASK_UPDATE_REQUEST","TASK_UPDATE_SUCCESS","TASK_UPDATE_FAIL","TASK_COMPLETE_REQUEST","TASK_COMPLETE_SUCCESS","TASK_COMPLETE_FAIL","reducer","combineReducers","userLogin","state","action","type","loading","userInfo","payload","error","userRegister","boardCreate","board","boardList","boards","boardToEdit","show","boardToEditClasses","classes","boardUpdate","updatedBoard","boardDelete","boardDeleteClass","classId","classToDelete","boardView","weekList","weeks","weekAdd","week","weekToEdit","weekDelete","weekUpdate","updatedWeek","weekView","weekDays","days","weekClasses","taskList","tasks","mondayTasks","tuesdayTasks","wednesdayTasks","thursdayTasks","fridayTasks","saturdayTasks","sundayTasks","taskCreate","task","taskDelete","taskToEdit","taskUpdate","taskComplete","initialState","localStorage","getItem","JSON","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","Loader","className","getClassesToEdit","id","dispatch","getState","a","config","headers","Authorization","access","axios","get","data","response","message","AddBoard","open","setOpen","newBoards","setNewBoards","useState","title","setTitle","classToAdd","setClassToAdd","setClasses","useDispatch","onSubmit","e","preventDefault","post","createBoard","maxLength","placeholder","value","onChange","target","required","onClick","length","map","index","index_num","cloneClasses","splice","deleteClassHandler","DeleteClassPopup","showDeleteConfirm","setShowDeleteConfirm","setDeletedClasses","deletedClasses","useSelector","delete","DeleteBoardPopup","showDeleteBoardConfirm","setShowDeleteBoardConfirm","deletedBoards","setDeletedBoards","EditBoard","newBoardIds","setNewBoardsIds","classesFromDB","deleteCurrentClassHandler","getClassToDelete","submitHandler","put","updateBoard","includes","Board","Col","md","sm","to","BoardContainer","listLoading","boardsFromDB","setBoardsFromDB","useEffect","arr","uniqueNewBoards","i","final","indexOf","filter","toDelete","Set","completeNewBoards","obj","has","completeBoardsFromDB","Row","BoardScreen","history","createBoardOpen","setCreateBoardOpen","boardEditLoading","showEdit","push","login","username","password","setItem","stringify","logout","removeItem","LoginScreen","setUsername","setPassword","RegisterScreen","repeatPassword","setRepeatPassword","passwordError","setPasswordError","registerError","register","listTasks","getMondayTasks","getTuesdayTasks","getWednesdayTasks","getThursdayTasks","getFridayTasks","getSaturdayTasks","getSundayTasks","getWeekDays","month","day","maxDay","String","Week","openEdit","setOpenEdit","WeekContainer","newWeeks","newWeeksIds","deletedWeeks","setDeletedWeeks","weeksFromDB","setWeeksFromDB","uniqueNewWeeks","completeNewWeeks","completeWeeksFromDB","AddWeek","openAdd","setOpenAdd","setNewWeeks","setMonth","setDay","addWeek","name","min","max","DeleteWeekPopup","showDeleteWeekConfirm","setShowDeleteWeekConfirm","EditWeek","setNewWeeksIds","parseInt","BoardViewScreen","useParams","boardLoading","weekLoading","getBoard","listWeeks","TaskDropdown","showDropdown","setShowDropdown","newTasks","setNewTasks","newTasksIds","setNewTasksIds","deletedTasks","setDeletedTasks","completeTask","completed","Task","currentClassName","setCurrentClassName","class_name","console","log","xs","time_hour","time_minute","am","Day","date","tasksFromDB","setTasksFromDB","stringToNumber","uniqueNewTasks","completeNewTasks","completeTasksFromDB","lg","DayContainer","mondayTaskList","tuesdayTaskList","wednesdayTaskList","thursdayTaskList","fridayTaskList","saturdayTaskList","sundayTaskList","AddTask","setClassId","taskType","setTaskType","hour","setHour","minute","setMinute","setAm","createTask","classOption","EditTask","updateTask","getBoardFromWeek","getWeek","getClassesFromWeek","Navbar","collapsed","setCollapsed","height","window","innerHeight","width","innerWidth","dimensions","setDimensions","handleResize","addEventListener","_","removeEventListener","App","path","component","exact","WeekScreen","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1848cdfe.chunk.js","sourcesContent":["export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\n\nexport const USER_LOGOUT = 'USER_LOGOUT'\n\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'","export const BOARD_CREATE_REQUEST = 'BOARD_CREATE_REQUEST'\nexport const BOARD_CREATE_SUCCESS = 'BOARD_CREATE_SUCCESS'\nexport const BOARD_CREATE_FAIL = 'BOARD_CREATE_FAIL'\nexport const BOARD_CREATE_RESET = 'BOARD_CREATE_RESET'\n\nexport const BOARD_LIST_REQUEST = 'BOARD_LIST_REQUEST'\nexport const BOARD_LIST_SUCCESS = 'BOARD_LIST_SUCCESS'\nexport const BOARD_LIST_FAIL = 'BOARD_LIST_FAIL'\n\nexport const BOARD_TO_EDIT_REQUEST = 'BOARD_TO_EDIT_REQUEST'\nexport const BOARD_TO_EDIT_SUCCESS = 'BOARD_TO_EDIT_SUCCESS'\nexport const BOARD_TO_EDIT_FAIL = 'BOARD_TO_EDIT_FAIL'\nexport const BOARD_TO_EDIT_RESET = 'BOARD_TO_EDIT_RESET'\nexport const BOARD_SHOW_EDIT = 'BOARD_SHOW_EDIT'\n\nexport const BOARD_TO_EDIT_CLASSES_REQUEST = 'BOARD_TO_EDIT_CLASSES_REQUEST'\nexport const BOARD_TO_EDIT_CLASSES_SUCCESS = 'BOARD_TO_EDIT_CLASSES_SUCCESS'\nexport const BOARD_TO_EDIT_CLASSES_FAIL = 'BOARD_TO_EDIT_CLASSES_FAIL'\n\nexport const BOARD_DELETE_CLASS_REQUEST = 'BOARD_DELETE_CLASS_REQUEST'\nexport const BOARD_DELETE_CLASS_SUCCESS = 'BOARD_DELETE_CLASS_SUCCESS'\nexport const BOARD_DELETE_CLASS_FAIL = 'BOARD_DELETE_CLASS_FAIL'\n\nexport const CLASS_TO_DELETE_REQUEST = 'CLASS_TO_DELETE_REQUEST'\nexport const CLASS_TO_DELETE_SUCCESS = 'CLASS_TO_DELETE_SUCCESS'\nexport const CLASS_TO_DELETE_FAIL = 'CLASS_TO_DELETE_FAIL'\n\nexport const BOARD_UPDATE_REQUEST = 'BOARD_UPDATE_REQUEST'\nexport const BOARD_UPDATE_SUCCESS = 'BOARD_UPDATE_SUCCESS'\nexport const BOARD_UPDATE_FAIL = 'BOARD_UPDATE_FAIL'\n\nexport const BOARD_DELETE_REQUEST = 'BOARD_DELETE_REQUEST'\nexport const BOARD_DELETE_SUCCESS = 'BOARD_DELETE_SUCCESS'\nexport const BOARD_DELETE_FAIL = 'BOARD_DELETE_FAIL'\n\nexport const BOARD_VIEW_REQUEST = 'BOARD_VIEW_REQUEST'\nexport const BOARD_VIEW_SUCCESS = 'BOARD_VIEW_SUCCESS'\nexport const BOARD_VIEW_FAIL = 'BOARD_VIEW_FAIL'","export const WEEK_LIST_REQUEST = 'WEEK_LIST_REQUEST'\nexport const WEEK_LIST_SUCCESS = 'WEEK_LIST_SUCCESS'\nexport const WEEK_LIST_FAIL = 'WEEK_LIST_FAIL'\n\nexport const WEEK_ADD_REQUEST = 'WEEK_ADD_REQUEST'\nexport const WEEK_ADD_SUCCESS = 'WEEK_ADD_SUCCESS'\nexport const WEEK_ADD_FAIL = 'WEEK_ADD_FAIL'\n\nexport const WEEK_TO_EDIT_REQUEST = 'WEEK_TO_EDIT_REQUEST'\nexport const WEEK_TO_EDIT_SUCCESS = 'WEEK_TO_EDIT_SUCCESS'\nexport const WEEK_TO_EDIT_FAIL = 'WEEK_TO_EDIT_FAIL'\nexport const WEEK_TO_EDIT_RESET = 'WEEK_TO_EDIT_RESET'\n\nexport const WEEK_DELETE_REQUEST = 'WEEK_DELETE_REQUEST'\nexport const WEEK_DELETE_SUCCESS = 'WEEK_DELETE_SUCCESS'\nexport const WEEK_DELETE_FAIL = 'WEEK_DELETE_FAIL'\n\nexport const WEEK_UPDATE_REQUEST = 'WEEK_UPDATE_REQUEST'\nexport const WEEK_UPDATE_SUCCESS = 'WEEK_UPDATE_SUCCESS'\nexport const WEEK_UPDATE_FAIL = 'WEEK_UPDATE_FAIL'\n\nexport const WEEK_VIEW_REQUEST = 'WEEK_VIEW_REQUEST'\nexport const WEEK_VIEW_SUCCESS = 'WEEK_VIEW_SUCCESS'\nexport const WEEK_VIEW_FAIL = 'WEEK_VIEW_FAIL'\n\nexport const WEEK_DAYS = 'WEEK_DAYS'\n\nexport const WEEK_CLASSES_REQUEST = 'WEEK_CLASSES_REQUEST'\nexport const WEEK_CLASSES_SUCCESS = 'WEEK_CLASSES_SUCCESS'\nexport const WEEK_CLASSES_FAIL = 'WEEK_CLASSES_FAIL'","export const TASK_LIST_REQUEST = 'TASK_LIST_REQUEST'\nexport const TASK_LIST_SUCCESS = 'TASK_LIST_SUCCESS'\nexport const TASK_LIST_FAIL = 'TASK_LIST_FAIL'\n\nexport const MONDAY_TASKS_REQUEST = 'MONDAY_TASKS_REQUEST'\nexport const MONDAY_TASKS_SUCCESS = 'MONDAY_TASKS_SUCCESS'\nexport const MONDAY_TASKS_FAIL = 'MONDAY_TASKS_FAIL'\n\nexport const TUESDAY_TASKS_REQUEST = 'TUESDAY_TASKS_REQUEST'\nexport const TUESDAY_TASKS_SUCCESS = 'TUESDAY_TASKS_SUCCESS'\nexport const TUESDAY_TASKS_FAIL = 'TUESDAY_TASKS_FAIL'\n\nexport const WEDNESDAY_TASKS_REQUEST = 'WEDNESDAY_TASKS_REQUEST'\nexport const WEDNESDAY_TASKS_SUCCESS = 'WEDNESDAY_TASKS_SUCCESS'\nexport const WEDNESDAY_TASKS_FAIL = 'WEDNESDAY_TASKS_FAIL'\n\nexport const THURSDAY_TASKS_REQUEST = 'THURSDAY_TASKS_REQUEST'\nexport const THURSDAY_TASKS_SUCCESS = 'THURSDAY_TASKS_SUCCESS'\nexport const THURSDAY_TASKS_FAIL = 'THURSDAY_TASKS_FAIL'\n\nexport const FRIDAY_TASKS_REQUEST = 'FRIDAY_TASKS_REQUEST'\nexport const FRIDAY_TASKS_SUCCESS = 'FRIDAY_TASKS_SUCCESS'\nexport const FRIDAY_TASKS_FAIL = 'FRIDAY_TASKS_FAIL'\n\nexport const SATURDAY_TASKS_REQUEST = 'SATURDAY_TASKS_REQUEST'\nexport const SATURDAY_TASKS_SUCCESS = 'SATURDAY_TASKS_SUCCESS'\nexport const SATURDAY_TASKS_FAIL = 'SATURDAY_TASKS_FAIL'\n\nexport const SUNDAY_TASKS_REQUEST = 'SUNDAY_TASKS_REQUEST'\nexport const SUNDAY_TASKS_SUCCESS = 'SUNDAY_TASKS_SUCCESS'\nexport const SUNDAY_TASKS_FAIL = 'SUNDAY_TASKS_FAIL'\n\nexport const TASK_CREATE_REQUEST = 'TASK_CREATE_REQUEST'\nexport const TASK_CREATE_SUCCESS = 'TASK_CREATE_SUCCESS'\nexport const TASK_CREATE_FAIL = 'TASK_CREATE_FAIL'\n\nexport const TASK_DELETE_REQUEST = 'TASK_DELETE_REQUEST'\nexport const TASK_DELETE_SUCCESS = 'TASK_DELETE_SUCCESS'\nexport const TASK_DELETE_FAIL = 'TASK_DELETE_FAIL'\n\nexport const TASK_TO_EDIT_REQUEST = 'TASK_TO_EDIT_REQUEST'\nexport const TASK_TO_EDIT_SUCCESS = 'TASK_TO_EDIT_SUCCESS'\nexport const TASK_TO_EDIT_FAIL = 'TASK_TO_EDIT_FAIL'\n\nexport const TASK_UPDATE_REQUEST = 'TASK_UPDATE_REQUEST'\nexport const TASK_UPDATE_SUCCESS = 'TASK_UPDATE_SUCCESS'\nexport const TASK_UPDATE_FAIL = 'TASK_UPDATE_FAIL'\n\nexport const TASK_COMPLETE_REQUEST = 'TASK_COMPLETE_REQUEST'\nexport const TASK_COMPLETE_SUCCESS = 'TASK_COMPLETE_SUCCESS'\nexport const TASK_COMPLETE_FAIL = 'TASK_COMPLETE_FAIL'","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport {\n    userLoginReducer,\n    userRegisterReducer\n} from './reducers/userReducers'\n\nimport {\n    boardCreateReducer,\n    boardListReducer,\n    boardToEditReducer,\n    boardToEditClassesReducer,\n    boardUpdateReducer,\n    boardDeleteReducer,\n    boardDeleteClassReducer,\n    classToDeleteReducer,\n    boardViewReducer,\n} from './reducers/boardReducers'\n\nimport {\n    weekListReducer,\n    weekAddReducer,\n    weekToEditReducer,\n    weekDeleteReducer,\n    weekUpdateReducer,\n    weekViewReducer,\n    weekDaysReducer,\n    weekClassesReducer,\n} from './reducers/weekReducers'\n\nimport {\n    taskListReducer,\n    mondayTasksReducer,\n    tuesdayTasksReducer,\n    wednesdayTasksReducer,\n    thursdayTasksReducer,\n    fridayTasksReducer,\n    saturdayTasksReducer,\n    sundayTasksReducer,\n    taskCreateReducer,\n    taskDeleteReducer,\n    taskToEditReducer,\n    taskUpdateReducer,\n    taskCompleteReducer,\n} from './reducers/taskReducers'\n\nconst reducer = combineReducers({\n    userLogin: userLoginReducer,\n    userRegister: userRegisterReducer,\n\n    boardCreate: boardCreateReducer,\n    boardList: boardListReducer,\n    boardToEdit: boardToEditReducer,\n    boardToEditClasses: boardToEditClassesReducer,\n    boardUpdate: boardUpdateReducer,\n    boardDelete: boardDeleteReducer,\n    boardDeleteClass: boardDeleteClassReducer,\n    classToDelete: classToDeleteReducer,\n    boardView: boardViewReducer,\n\n    weekList: weekListReducer,\n    weekAdd: weekAddReducer,\n    weekToEdit: weekToEditReducer,\n    weekDelete: weekDeleteReducer,\n    weekUpdate: weekUpdateReducer,\n    weekView: weekViewReducer,\n    weekDays: weekDaysReducer,\n    weekClasses: weekClassesReducer,\n\n    taskList: taskListReducer,\n    mondayTasks: mondayTasksReducer,\n    tuesdayTasks: tuesdayTasksReducer,\n    wednesdayTasks: wednesdayTasksReducer,\n    thursdayTasks: thursdayTasksReducer,\n    fridayTasks: fridayTasksReducer,\n    saturdayTasks: saturdayTasksReducer,\n    sundayTasks: sundayTasksReducer,\n    taskCreate: taskCreateReducer,\n    taskDelete: taskDeleteReducer,\n    taskToEdit: taskToEditReducer,\n    taskUpdate: taskUpdateReducer,\n    taskComplete: taskCompleteReducer,\n})\n\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\n    JSON.parse(localStorage.getItem('userInfo')) : null\n\nconst initialState = {\n    userLogin: { userInfo: userInfoFromStorage }\n}\n\nconst middleware = [thunk]\n\nconst store = createStore(\n    reducer,\n    initialState,\n    composeWithDevTools(applyMiddleware(...middleware))    \n)\n\nexport default store","import {\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n\n    USER_LOGOUT,\n\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n} from '../constants/userConstants'\n\nexport const userLoginReducer = (state={}, action) => {\n    switch(action.type) {\n        case USER_LOGIN_REQUEST:\n            return { loading: true }\n\n        case USER_LOGIN_SUCCESS:\n            return { loading: false, userInfo: action.payload }\n\n        case USER_LOGIN_FAIL:\n            return { loading: false, error: action.payload }\n\n        case USER_LOGOUT:\n            return {}\n        \n        default:\n            return state\n    }\n}\n\nexport const userRegisterReducer = (state={}, action) => {\n    switch(action.type) {\n        case USER_REGISTER_REQUEST:\n            return { loading: true }\n\n        case USER_REGISTER_SUCCESS:\n            return { loading: false, userInfo: action.payload }\n\n        case USER_REGISTER_FAIL:\n            return { loading: false, error: action.payload }\n        \n        default:\n            return state\n    }\n}","import {\n    BOARD_CREATE_REQUEST,\n    BOARD_CREATE_SUCCESS,\n    BOARD_CREATE_FAIL,\n    BOARD_CREATE_RESET,\n\n    BOARD_LIST_REQUEST,\n    BOARD_LIST_SUCCESS,\n    BOARD_LIST_FAIL,\n\n    BOARD_TO_EDIT_REQUEST,\n    BOARD_TO_EDIT_SUCCESS,\n    BOARD_TO_EDIT_FAIL,\n    BOARD_SHOW_EDIT,\n    BOARD_TO_EDIT_RESET,\n\n    BOARD_TO_EDIT_CLASSES_REQUEST,\n    BOARD_TO_EDIT_CLASSES_SUCCESS,\n    BOARD_TO_EDIT_CLASSES_FAIL,\n\n    BOARD_DELETE_CLASS_REQUEST,\n    BOARD_DELETE_CLASS_SUCCESS,\n    BOARD_DELETE_CLASS_FAIL,\n\n    CLASS_TO_DELETE_REQUEST,\n    CLASS_TO_DELETE_SUCCESS,\n    CLASS_TO_DELETE_FAIL,\n\n    BOARD_UPDATE_REQUEST,\n    BOARD_UPDATE_SUCCESS,\n    BOARD_UPDATE_FAIL,\n\n    BOARD_DELETE_REQUEST,\n    BOARD_DELETE_SUCCESS,\n    BOARD_DELETE_FAIL,\n\n    BOARD_VIEW_REQUEST,\n    BOARD_VIEW_SUCCESS,\n    BOARD_VIEW_FAIL,\n} from '../constants/boardConstants'\n\nexport const boardCreateReducer = (state={}, action) => {\n    switch(action.type) {\n        case BOARD_CREATE_REQUEST:\n            return { loading: true }\n\n        case BOARD_CREATE_SUCCESS:\n            return { loading: false, board: action.payload }\n\n        case BOARD_CREATE_FAIL:\n            return { loading: false, error: action.payload }\n        \n        case BOARD_CREATE_RESET:\n            return {}\n        \n        default:\n            return state\n    }\n}\n\nexport const boardListReducer = (state={}, action) => {\n    switch(action.type) {\n        case BOARD_LIST_REQUEST:\n            return { loading: true }\n\n        case BOARD_LIST_SUCCESS:\n            return { loading: false, boards: action.payload }\n\n        case BOARD_LIST_FAIL:\n            return { loading: false, error: action.payload }\n        \n        default:\n            return state\n    }\n}\n\nexport const boardToEditReducer = (state={}, action) => {\n    switch(action.type) {\n        case BOARD_TO_EDIT_REQUEST:\n            return { loading: true }\n\n        case BOARD_TO_EDIT_SUCCESS:\n            return { loading: false, board: action.payload }\n\n        case BOARD_TO_EDIT_FAIL:\n            return { loading: false, error: action.payload }\n\n        case BOARD_SHOW_EDIT:\n            return { ...state, show: true}\n\n        case BOARD_TO_EDIT_RESET:\n            return {}\n        \n        default:\n            return state\n    }\n}\n\nexport const boardToEditClassesReducer = (state={}, action) => {\n    switch(action.type) {\n        case BOARD_TO_EDIT_CLASSES_REQUEST:\n            return { loading: true }\n\n        case BOARD_TO_EDIT_CLASSES_SUCCESS:\n            return { loading: false, classes: action.payload }\n\n        case BOARD_TO_EDIT_CLASSES_FAIL:\n            return { loading: false, error: action.payload }\n        \n        default:\n            return state\n    }\n}\n\nexport const boardDeleteClassReducer = (state={}, action) => {\n    switch(action.type) {\n        case BOARD_DELETE_CLASS_REQUEST:\n            return { loading: true }\n\n        case BOARD_DELETE_CLASS_SUCCESS:\n            return { loading: false, classId: action.payload }\n\n        case BOARD_DELETE_CLASS_FAIL:\n            return { loading: false, error: action.payload }\n        \n        default:\n            return state\n    }\n}\n\nexport const classToDeleteReducer = (state={}, action) => {\n    switch(action.type) {\n        case CLASS_TO_DELETE_REQUEST:\n            return { loading: true }\n\n        case CLASS_TO_DELETE_SUCCESS:\n            return { loading: false, classId: action.payload }\n\n        case CLASS_TO_DELETE_FAIL:\n            return { loading: false, error: action.payload }\n        \n        default:\n            return state\n    }\n}\n\nexport const boardUpdateReducer = (state={}, action) => {\n    switch(action.type) {\n        case BOARD_UPDATE_REQUEST:\n            return { loading: true }\n\n        case BOARD_UPDATE_SUCCESS:\n            return { loading: false, updatedBoard: action.payload }\n\n        case BOARD_UPDATE_FAIL:\n            return { loading: false, error: action.payload }\n        \n        default:\n            return state\n    }\n}\n\nexport const boardDeleteReducer = (state={}, action) => {\n    switch(action.type) {\n        case BOARD_DELETE_REQUEST:\n            return { loading: true }\n\n        case BOARD_DELETE_SUCCESS:\n            return { loading: false, board: action.payload }\n\n        case BOARD_DELETE_FAIL:\n            return { loading: false, error: action.payload }\n        \n        default:\n            return state\n    }\n}\n\nexport const boardViewReducer = (state={}, action) => {\n    switch(action.type) {\n        case BOARD_VIEW_REQUEST:\n            return { loading: true }\n\n        case BOARD_VIEW_SUCCESS:\n            return { loading: false, board: action.payload }\n\n        case BOARD_VIEW_FAIL:\n            return { loading: false, error: action.payload }\n        \n        default:\n            return state\n    }\n}","import {\n    WEEK_LIST_REQUEST,\n    WEEK_LIST_SUCCESS,\n    WEEK_LIST_FAIL,\n\n    WEEK_ADD_REQUEST,\n    WEEK_ADD_SUCCESS,\n    WEEK_ADD_FAIL,\n\n    WEEK_TO_EDIT_REQUEST,\n    WEEK_TO_EDIT_SUCCESS,\n    WEEK_TO_EDIT_FAIL,\n    WEEK_TO_EDIT_RESET,\n\n    WEEK_DELETE_REQUEST,\n    WEEK_DELETE_SUCCESS,\n    WEEK_DELETE_FAIL,\n\n    WEEK_UPDATE_REQUEST,\n    WEEK_UPDATE_SUCCESS,\n    WEEK_UPDATE_FAIL,\n\n    WEEK_VIEW_REQUEST,\n    WEEK_VIEW_SUCCESS,\n    WEEK_VIEW_FAIL,\n\n    WEEK_DAYS,\n\n    WEEK_CLASSES_REQUEST,\n    WEEK_CLASSES_SUCCESS,\n    WEEK_CLASSES_FAIL,\n} from '../constants/weekConstants'\n\nexport const weekListReducer = (state={}, action) => {\n    switch(action.type) {\n        case WEEK_LIST_REQUEST:\n            return { loading: true }\n\n        case WEEK_LIST_SUCCESS:\n            return { loading: false, weeks: action.payload }\n\n        case WEEK_LIST_FAIL:\n            return { loading: false, error: action.payload }\n        \n        default:\n            return state\n    }\n}\n\nexport const weekAddReducer = (state={}, action) => {\n    switch(action.type) {\n        case WEEK_ADD_REQUEST:\n            return { loading: true }\n\n        case WEEK_ADD_SUCCESS:\n            return { loading: false, week: action.payload }\n\n        case WEEK_ADD_FAIL:\n            return { loading: false, error: action.payload }\n        \n        default:\n            return state\n    }\n}\n\nexport const weekToEditReducer = (state={}, action) => {\n    switch(action.type) {\n        case WEEK_TO_EDIT_REQUEST:\n            return { loading: true }\n\n        case WEEK_TO_EDIT_SUCCESS:\n            return { loading: false, week: action.payload }\n\n        case WEEK_TO_EDIT_FAIL:\n            return { loading: false, error: action.payload }\n\n        case WEEK_TO_EDIT_RESET:\n            return {}\n        \n        default:\n            return state\n    }\n}\n\nexport const weekDeleteReducer = (state={}, action) => {\n    switch(action.type) {\n        case WEEK_DELETE_REQUEST:\n            return { loading: true }\n\n        case WEEK_DELETE_SUCCESS:\n            return { loading: false, week: action.payload }\n\n        case WEEK_DELETE_FAIL:\n            return { loading: false, error: action.payload }\n        \n        default:\n            return state\n    }\n}\n\nexport const weekUpdateReducer = (state={}, action) => {\n    switch(action.type) {\n        case WEEK_UPDATE_REQUEST:\n            return { loading: true }\n\n        case WEEK_UPDATE_SUCCESS:\n            return { loading: false, updatedWeek: action.payload }\n\n        case WEEK_UPDATE_FAIL:\n            return { loading: false, error: action.payload }\n        \n        default:\n            return state\n    }\n}\n\nexport const weekViewReducer = (state={}, action) => {\n    switch(action.type) {\n        case WEEK_VIEW_REQUEST:\n            return { loading: true }\n\n        case WEEK_VIEW_SUCCESS:\n            return { loading: false, week: action.payload }\n\n        case WEEK_VIEW_FAIL:\n            return { loading: false, error: action.payload }\n        \n        default:\n            return state\n    }\n}\n\nexport const weekDaysReducer = (state={}, action) => {\n    switch(action.type) {\n        case WEEK_DAYS:\n            return { days: action.payload }\n        \n        default:\n            return state\n    }\n}\n\nexport const weekClassesReducer = (state={}, action) => {\n    switch(action.type) {\n        case WEEK_CLASSES_REQUEST:\n            return { loading: true }\n\n        case WEEK_CLASSES_SUCCESS:\n            return { loading: false, classes: action.payload }\n\n        case WEEK_CLASSES_FAIL:\n            return { loading: false, error: action.payload }\n        \n        default:\n            return state\n    }\n}","import {\n    TASK_LIST_REQUEST,\n    TASK_LIST_SUCCESS,\n    TASK_LIST_FAIL,\n\n    MONDAY_TASKS_REQUEST,\n    MONDAY_TASKS_SUCCESS,\n    MONDAY_TASKS_FAIL,\n\n    TUESDAY_TASKS_REQUEST,\n    TUESDAY_TASKS_SUCCESS,\n    TUESDAY_TASKS_FAIL,\n\n    WEDNESDAY_TASKS_REQUEST,\n    WEDNESDAY_TASKS_SUCCESS,\n    WEDNESDAY_TASKS_FAIL,\n\n    THURSDAY_TASKS_REQUEST,\n    THURSDAY_TASKS_SUCCESS,\n    THURSDAY_TASKS_FAIL,\n\n    FRIDAY_TASKS_REQUEST,\n    FRIDAY_TASKS_SUCCESS,\n    FRIDAY_TASKS_FAIL,\n\n    SATURDAY_TASKS_REQUEST,\n    SATURDAY_TASKS_SUCCESS,\n    SATURDAY_TASKS_FAIL,\n\n    SUNDAY_TASKS_REQUEST,\n    SUNDAY_TASKS_SUCCESS,\n    SUNDAY_TASKS_FAIL,\n\n    TASK_CREATE_REQUEST,\n    TASK_CREATE_SUCCESS,\n    TASK_CREATE_FAIL,\n\n    TASK_DELETE_REQUEST,\n    TASK_DELETE_SUCCESS,\n    TASK_DELETE_FAIL,\n\n    TASK_TO_EDIT_REQUEST,\n    TASK_TO_EDIT_SUCCESS,\n    TASK_TO_EDIT_FAIL,\n\n    TASK_UPDATE_REQUEST,\n    TASK_UPDATE_SUCCESS,\n    TASK_UPDATE_FAIL,\n\n    TASK_COMPLETE_REQUEST,\n    TASK_COMPLETE_SUCCESS,\n    TASK_COMPLETE_FAIL,\n} from '../constants/taskConstants'\n\nexport const taskListReducer = (state={}, action) => {\n    switch(action.type) {\n        case TASK_LIST_REQUEST:\n            return { loading: true }\n\n        case TASK_LIST_SUCCESS:\n            return { loading: false, tasks: action.payload }\n\n        case TASK_LIST_FAIL:\n            return { loading: false, error: action.payload }\n        \n        default:\n            return state\n    }\n}\n\nexport const mondayTasksReducer = (state={}, action) => {\n    switch(action.type) {\n        case MONDAY_TASKS_REQUEST:\n            return { loading: true }\n\n        case MONDAY_TASKS_SUCCESS:\n            return { loading: false, tasks: action.payload }\n\n        case MONDAY_TASKS_FAIL:\n            return { loading: false, error: action.payload }\n        \n        default:\n            return state\n    }\n}\n\nexport const tuesdayTasksReducer = (state={}, action) => {\n    switch(action.type) {\n        case TUESDAY_TASKS_REQUEST:\n            return { loading: true }\n\n        case TUESDAY_TASKS_SUCCESS:\n            return { loading: false, tasks: action.payload }\n\n        case TUESDAY_TASKS_FAIL:\n            return { loading: false, error: action.payload }\n        \n        default:\n            return state\n    }\n}\n\nexport const wednesdayTasksReducer = (state={}, action) => {\n    switch(action.type) {\n        case WEDNESDAY_TASKS_REQUEST:\n            return { loading: true }\n\n        case WEDNESDAY_TASKS_SUCCESS:\n            return { loading: false, tasks: action.payload }\n\n        case WEDNESDAY_TASKS_FAIL:\n            return { loading: false, error: action.payload }\n        \n        default:\n            return state\n    }\n}\n\nexport const thursdayTasksReducer = (state={}, action) => {\n    switch(action.type) {\n        case THURSDAY_TASKS_REQUEST:\n            return { loading: true }\n\n        case THURSDAY_TASKS_SUCCESS:\n            return { loading: false, tasks: action.payload }\n\n        case THURSDAY_TASKS_FAIL:\n            return { loading: false, error: action.payload }\n        \n        default:\n            return state\n    }\n}\n\nexport const fridayTasksReducer = (state={}, action) => {\n    switch(action.type) {\n        case FRIDAY_TASKS_REQUEST:\n            return { loading: true }\n\n        case FRIDAY_TASKS_SUCCESS:\n            return { loading: false, tasks: action.payload }\n\n        case FRIDAY_TASKS_FAIL:\n            return { loading: false, error: action.payload }\n        \n        default:\n            return state\n    }\n}\n\nexport const saturdayTasksReducer = (state={}, action) => {\n    switch(action.type) {\n        case SATURDAY_TASKS_REQUEST:\n            return { loading: true }\n\n        case SATURDAY_TASKS_SUCCESS:\n            return { loading: false, tasks: action.payload }\n\n        case SATURDAY_TASKS_FAIL:\n            return { loading: false, error: action.payload }\n        \n        default:\n            return state\n    }\n}\n\nexport const sundayTasksReducer = (state={}, action) => {\n    switch(action.type) {\n        case SUNDAY_TASKS_REQUEST:\n            return { loading: true }\n\n        case SUNDAY_TASKS_SUCCESS:\n            return { loading: false, tasks: action.payload }\n\n        case SUNDAY_TASKS_FAIL:\n            return { loading: false, error: action.payload }\n        \n        default:\n            return state\n    }\n}\n\nexport const taskCreateReducer = (state={}, action) => {\n    switch(action.type) {\n        case TASK_CREATE_REQUEST:\n            return { loading: true }\n\n        case TASK_CREATE_SUCCESS:\n            return { loading: false, task: action.payload }\n\n        case TASK_CREATE_FAIL:\n            return { loading: false, error: action.payload }\n        \n        default:\n            return state\n    }\n}\n\nexport const taskDeleteReducer = (state={}, action) => {\n    switch(action.type) {\n        case TASK_DELETE_REQUEST:\n            return { loading: true }\n\n        case TASK_DELETE_SUCCESS:\n            return { loading: false, task: action.payload }\n\n        case TASK_DELETE_FAIL:\n            return { loading: false, error: action.payload }\n        \n        default:\n            return state\n    }\n}\n\nexport const taskToEditReducer = (state={}, action) => {\n    switch(action.type) {\n        case TASK_TO_EDIT_REQUEST:\n            return { loading: true }\n\n        case TASK_TO_EDIT_SUCCESS:\n            return { loading: false, task: action.payload }\n\n        case TASK_TO_EDIT_FAIL:\n            return { loading: false, error: action.payload }\n        \n        default:\n            return state\n    }\n}\n\nexport const taskUpdateReducer = (state={}, action) => {\n    switch(action.type) {\n        case TASK_UPDATE_REQUEST:\n            return { loading: true }\n\n        case TASK_UPDATE_SUCCESS:\n            return { loading: false, task: action.payload }\n\n        case TASK_UPDATE_FAIL:\n            return { loading: false, error: action.payload }\n        \n        default:\n            return state\n    }\n}\n\nexport const taskCompleteReducer = (state={}, action) => {\n    switch(action.type) {\n        case TASK_COMPLETE_REQUEST:\n            return { loading: true }\n\n        case TASK_COMPLETE_SUCCESS:\n            return { loading: false, task: action.payload }\n\n        case TASK_COMPLETE_FAIL:\n            return { loading: false, error: action.payload }\n        \n        default:\n            return state\n    }\n}","import React from 'react'\n\nfunction Loader() {\n    return (\n        <div className='popup-container'>\n            <div className=\"lds-ellipsis loader\"><div></div><div></div><div></div><div></div></div>\n        </div>\n    )\n}\n\nexport default Loader","import axios from 'axios'\n\nimport {\n    BOARD_CREATE_REQUEST,\n    BOARD_CREATE_SUCCESS,\n    BOARD_CREATE_FAIL,\n    BOARD_CREATE_RESET,\n\n    BOARD_LIST_REQUEST,\n    BOARD_LIST_SUCCESS,\n    BOARD_LIST_FAIL,\n\n    BOARD_TO_EDIT_REQUEST,\n    BOARD_TO_EDIT_SUCCESS,\n    BOARD_TO_EDIT_FAIL,\n    BOARD_SHOW_EDIT,\n\n    BOARD_TO_EDIT_CLASSES_REQUEST,\n    BOARD_TO_EDIT_CLASSES_SUCCESS,\n    BOARD_TO_EDIT_CLASSES_FAIL,\n    \n    BOARD_DELETE_CLASS_REQUEST,\n    BOARD_DELETE_CLASS_SUCCESS,\n    BOARD_DELETE_CLASS_FAIL,\n\n    CLASS_TO_DELETE_REQUEST,\n    CLASS_TO_DELETE_SUCCESS,\n    CLASS_TO_DELETE_FAIL,\n\n    BOARD_UPDATE_REQUEST,\n    BOARD_UPDATE_SUCCESS,\n    BOARD_UPDATE_FAIL,\n\n    BOARD_DELETE_REQUEST,\n    BOARD_DELETE_SUCCESS,\n    BOARD_DELETE_FAIL,\n\n    BOARD_VIEW_REQUEST,\n    BOARD_VIEW_SUCCESS,\n    BOARD_VIEW_FAIL,\n} from '../constants/boardConstants'\n\nexport const listBoards = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: BOARD_LIST_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo }\n        } = getState()\n\n        const config = {\n            headers:{\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.access}`\n            }\n        }\n\n        const { data } = await axios.get(\n            '/api/boards/get-all-boards/',\n            config\n        )\n\n        dispatch({\n            type: BOARD_LIST_SUCCESS,\n            payload: data\n        })\n\n    } catch(error) {\n        dispatch({\n            type: BOARD_LIST_FAIL,\n            payload: error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n        })\n    }\n}\n\nexport const createBoard = (title, classes, { newBoards, setNewBoards }) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: BOARD_CREATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo }\n        } = getState()\n\n        const config = {\n            headers:{\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.access}`\n            }\n        }\n\n        const { data } = await axios.post(\n            '/api/boards/create-board/',\n            {'title': title, 'classes': classes},\n            config\n        )\n\n        dispatch({\n            type: BOARD_CREATE_SUCCESS,\n            payload: data\n        })\n\n        setNewBoards([data, ...newBoards])\n\n    } catch(error) {\n        dispatch({\n            type: BOARD_CREATE_FAIL,\n            payload: error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n        })\n    }\n}\n\nexport const getClassesToEdit = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: BOARD_TO_EDIT_CLASSES_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo }\n        } = getState()\n\n        const config = {\n            headers:{\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.access}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/boards/get-classes/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: BOARD_TO_EDIT_CLASSES_SUCCESS,\n            payload: data\n        })\n\n    } catch(error) {\n        dispatch({\n            type: BOARD_TO_EDIT_CLASSES_FAIL,\n            payload: error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n        })\n    }\n}\n\nexport const getBoardToEdit = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: BOARD_TO_EDIT_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo }\n        } = getState()\n\n        const config = {\n            headers:{\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.access}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/boards/get-board/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: BOARD_TO_EDIT_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: BOARD_SHOW_EDIT\n        })\n\n        dispatch(getClassesToEdit(id))\n\n    } catch(error) {\n        dispatch({\n            type: BOARD_TO_EDIT_FAIL,\n            payload: error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n        })\n    }\n}\n\nexport const deleteClass = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: BOARD_DELETE_CLASS_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo }\n        } = getState()\n\n        const {\n            classToDelete: { classId }\n        } = getState()\n\n        const config = {\n            headers:{\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.access}`\n            }\n        }\n\n        const { data } = await axios.delete(\n            `/api/boards/delete-class/${classId}`,\n            config\n        )\n\n        dispatch({\n            type: BOARD_DELETE_CLASS_SUCCESS,\n            payload: data\n        })\n\n    } catch(error) {\n        dispatch({\n            type: BOARD_DELETE_CLASS_FAIL,\n            payload: error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n        })\n    }\n}\n\nexport const getClassToDelete = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: CLASS_TO_DELETE_REQUEST\n        })\n\n        dispatch({\n            type: CLASS_TO_DELETE_SUCCESS,\n            payload: id\n        })\n\n    } catch(error) {\n        dispatch({\n            type: CLASS_TO_DELETE_FAIL,\n            payload: error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n        })\n    }\n}\n\nexport const updateBoard = (id, title, classes, { newBoards, setNewBoards, newBoardIds, setNewBoardsIds }) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: BOARD_UPDATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo }\n        } = getState()\n\n        const config = {\n            headers:{\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.access}`\n            }\n        }\n\n        const { data } = await axios.put(\n            '/api/boards/update-board/',\n            {'id': id, 'title': title, 'classes': classes},\n            config\n        )\n\n        dispatch({\n            type: BOARD_UPDATE_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: BOARD_CREATE_RESET\n        })\n\n        setNewBoards([data, ...newBoards])\n        setNewBoardsIds([data.id, ...newBoardIds])\n\n    } catch(error) {\n        dispatch({\n            type: BOARD_UPDATE_FAIL,\n            payload: error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n        })\n    }\n}\n\nexport const deleteBoard = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: BOARD_DELETE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo }\n        } = getState()\n\n        const {\n            boardToEdit: { board }\n        } = getState()\n\n        const config = {\n            headers:{\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.access}`\n            }\n        }\n\n        const { data } = await axios.delete(\n            `/api/boards/delete-board/${board.id}`,\n            config\n        )\n\n        dispatch({\n            type: BOARD_DELETE_SUCCESS,\n            payload: data\n        })\n\n    } catch(error) {\n        dispatch({\n            type: BOARD_DELETE_FAIL,\n            payload: error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n        })\n    }\n}\n\nexport const getBoard = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: BOARD_VIEW_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo }\n        } = getState()\n\n        const config = {\n            headers:{\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.access}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/boards/get-board/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: BOARD_VIEW_SUCCESS,\n            payload: data\n        })\n\n    } catch(error) {\n        dispatch({\n            type: BOARD_VIEW_FAIL,\n            payload: error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n        })\n    }\n}","import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { createBoard } from '../actions/boardActions'\n\nfunction AddBoard({ open, setOpen, newBoards, setNewBoards }) {\n\n    const [title, setTitle] = useState('')\n    const [classToAdd, setClassToAdd] = useState('')\n    const [classes, setClasses] = useState([])\n\n    const dispatch = useDispatch()\n\n    const addClassHandler = () => {\n        if (classToAdd.length > 0) {\n            setClasses([...classes, classToAdd])\n            setClassToAdd('')\n        } \n    }\n\n    const deleteClassHandler = (index) => {\n        const index_num = index['index']\n        const cloneClasses = [...classes]\n        cloneClasses.splice(index_num, 1)\n        setClasses([...cloneClasses])\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(createBoard(title, classes, { newBoards, setNewBoards }))\n        setOpen(!open)\n    }\n\n    return (\n        <div className='popup-container'>\n            <div className='popup'>\n                <form onSubmit={ submitHandler }>\n                    <label>title</label>\n                    <br />\n                    <input\n                        type='text'\n                        id='title'\n                        className='custom-input mb-3'\n                        maxLength='40'\n                        placeholder='title'\n                        value={ title }\n                        onChange={ (e) => setTitle(e.target.value) }\n                        required\n                    >\n                    </input>\n                    <br />\n                    <label>add classes</label>\n                    <br />\n                    <div>\n                    <input\n                        type='text'\n                        id='add-class'\n                        className='custom-input mb-3 mr-3 add-input'\n                        maxLength='25'\n                        placeholder='class name'\n                        value={ classToAdd }\n                        onChange={ (e) => setClassToAdd(e.target.value) }>\n                    </input>\n                    <button type='button' onClick={ addClassHandler } className={'button-custom button-custom-blue ' + (classes.length !== 0 && 'mb-3')}>add</button>\n                    </div>\n                    { classes.length !== 0 && classes.map((className, index) => (\n                        <div key={ index }>\n                            { className }\n                            <span type='button' onClick={ () => deleteClassHandler({ index }) } className='button-float-right'><i className=\"far fa-times trash-icon\"></i></span>\n                        </div>\n                    ))}\n                    <div className='mt-3 button-float-right'>\n                        <span onClick={ () => setOpen(!open) } className='blue-link'>cancel</span>\n                        <button type='submit' className='button-custom button-custom-blue ml-3'>create</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default AddBoard","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { deleteClass } from '../actions/boardActions'\n\nfunction DeleteClassPopup({ showDeleteConfirm, setShowDeleteConfirm, setDeletedClasses, deletedClasses }) {\n\n    const dispatch = useDispatch()\n\n    const classToDelete = useSelector(state => state.classToDelete)\n    const { classId } = classToDelete\n\n    const deleteCurrentClassHandler = () => {\n        dispatch(deleteClass())\n        setShowDeleteConfirm(!showDeleteConfirm)\n        setDeletedClasses([...deletedClasses, classId])\n    }\n\n    return (\n        <div className='popup-container'>\n            <div className='popup delete-popup'>\n                <p>are you sure you want to delete this class?</p>\n                <p className='sm-text delete-confirm-text'>all assignments related to this class will be deleted. this action cannot be undone!</p>\n                <div className='mt-1 button-float-right'>\n                    <span onClick={ () => setShowDeleteConfirm(!showDeleteConfirm) } className='blue-link'>cancel</span>\n                    <button onClick={ deleteCurrentClassHandler } type='button' className='button-custom button-custom-red ml-3'>delete</button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default DeleteClassPopup","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { BOARD_TO_EDIT_RESET } from '../constants/boardConstants'\n\nimport { deleteBoard } from '../actions/boardActions'\n\nfunction DeleteBoardPopup({ showDeleteBoardConfirm, setShowDeleteBoardConfirm, deletedBoards, setDeletedBoards }) {\n\n    const dispatch = useDispatch()\n\n    const boardToEdit = useSelector(state => state.boardToEdit)\n    const { board } = boardToEdit\n\n    const deleteCurrentClassHandler = () => {\n        dispatch(deleteBoard())\n        setDeletedBoards([...deletedBoards, board.id])\n        setShowDeleteBoardConfirm(!showDeleteBoardConfirm)\n        dispatch({ type: BOARD_TO_EDIT_RESET })\n    }\n\n    return (\n        <div className='popup-container'>\n            <div className='popup delete-popup'>\n                <p>are you sure you want to delete this board?</p>\n                <p className='sm-text delete-confirm-text'>all assignments and classes related to this board will be deleted. this action cannot be undone!</p>\n                <div className='mt-1 button-float-right'>\n                    <span onClick={ () => setShowDeleteBoardConfirm(!showDeleteBoardConfirm) } className='blue-link'>cancel</span>\n                    <button onClick={ deleteCurrentClassHandler } type='button' className='button-custom button-custom-red ml-3'>delete</button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default DeleteBoardPopup","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getClassToDelete, updateBoard } from '../actions/boardActions'\n\nimport { BOARD_TO_EDIT_RESET } from '../constants/boardConstants'\n\nimport DeleteClassPopup from './DeleteClassPopup'\nimport DeleteBoardPopup from './DeleteBoardPopup'\n\nfunction EditBoard({ newBoards, setNewBoards, newBoardIds, setNewBoardsIds, deletedBoards, setDeletedBoards }) {\n\n    const boardToEdit = useSelector(state => state.boardToEdit)\n    const { loading: boardEditLoading , board, error: boardEditError, show: showEdit } = boardToEdit\n\n    const boardToEditClasses = useSelector(state => state.boardToEditClasses)\n    const { loading: boardEditClassesLoading , classes: classesFromDB, error: boardEditClassesError } = boardToEditClasses\n\n    const classToDelete = useSelector(state => state.classToDelete)\n    const { loading: classDeleteLoading , classId, error: classDeleteError } = classToDelete\n\n    const [title, setTitle] = useState(board.title)\n    const [classToAdd, setClassToAdd] = useState('')\n    const [classes, setClasses] = useState([])\n    const [showDeleteConfirm, setShowDeleteConfirm] = useState(false)\n    const [showDeleteBoardConfirm, setShowDeleteBoardConfirm] = useState(false)\n    const [deletedClasses, setDeletedClasses] = useState([])\n\n    const dispatch = useDispatch()\n\n    const addClassHandler = () => {\n        if (classToAdd.length > 0) {\n            setClasses([...classes, classToAdd])\n            setClassToAdd('')\n        } \n    }\n\n    const deleteClassHandler = (index) => {\n        const index_num = index['index']\n        const cloneClasses = [...classes]\n        cloneClasses.splice(index_num, 1)\n        setClasses([...cloneClasses])\n    }\n\n    const deleteCurrentClassHandler = (id) => {\n        setShowDeleteConfirm(!showDeleteConfirm)\n        dispatch(getClassToDelete(id))\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(updateBoard(board.id, title, classes, { newBoards, setNewBoards, newBoardIds, setNewBoardsIds }))\n        dispatch({ type: BOARD_TO_EDIT_RESET })\n    }\n\n    return (\n        <div className='popup-container'>\n            { showDeleteConfirm && <DeleteClassPopup showDeleteConfirm={ showDeleteConfirm } setShowDeleteConfirm={ setShowDeleteConfirm } deletedClasses={ deletedClasses } setDeletedClasses={ setDeletedClasses } /> }\n            { showDeleteBoardConfirm && <DeleteBoardPopup showDeleteBoardConfirm={ showDeleteBoardConfirm } setShowDeleteBoardConfirm={ setShowDeleteBoardConfirm } deletedBoards={ deletedBoards } setDeletedBoards={ setDeletedBoards } /> }\n            <div className='popup'>\n                <span onClick={ () => setShowDeleteBoardConfirm(!showDeleteBoardConfirm) } ><i className=\"fal fa-trash-alt trash-icon button-float-right\"></i></span>\n                <form onSubmit={ submitHandler }>\n                    <label>title</label>\n                    <br />\n                    <input\n                        type='text'\n                        id='title'\n                        className='custom-input mb-3'\n                        maxLength='40'\n                        placeholder='title'\n                        value={ title }\n                        onChange={ (e) => setTitle(e.target.value) }>\n                    </input>\n                    <br />\n                    <label>edit classes</label>\n                    <br />\n                    <div>\n                    <input\n                        type='text'\n                        id='add-class'\n                        className='custom-input mb-3 mr-3 add-input'\n                        maxLength='25'\n                        placeholder='class name'\n                        value={ classToAdd }\n                        onChange={ (e) => setClassToAdd(e.target.value) }>\n                    </input>\n                    <button type='button' onClick={ addClassHandler } className={'button-custom button-custom-blue ' + ((classes.length !== 0 || ( classesFromDB && classesFromDB.length !== 0)) && 'mb-3')}>add</button>\n                    </div>\n                    { (classesFromDB && classesFromDB.length !== 0) && classesFromDB.map((className) => (\n                        ( (className && !deletedClasses.includes(className.id)) && <div key={ className.id }>\n                            { className.title }\n                            <span type='button' onClick={ () => deleteCurrentClassHandler(className.id) } className='button-float-right'><i className=\"far fa-times trash-icon\"></i></span>\n                        </div> )\n                    ))}\n                    { classes.length !== 0 && classes.map((className, index) => (\n                        <div key={ index }>\n                            { className }\n                            <span type='button' onClick={ () => deleteClassHandler({ index }) } className='button-float-right'><i className=\"far fa-times trash-icon\"></i></span>\n                        </div>\n                    ))}\n                    <div className='mt-3 button-float-right'>\n                        <span onClick={ () => dispatch({ type: BOARD_TO_EDIT_RESET }) } className='blue-link'>cancel</span>\n                        <button onClick={ submitHandler }type='submit' className='button-custom button-custom-blue ml-3'>edit</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default EditBoard","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { Link } from 'react-router-dom';\n\nimport Col from 'react-bootstrap/Col';\n\nimport { getBoardToEdit, getBoard } from '../actions/boardActions'\n\nimport { BOARD_SHOW_EDIT } from '../constants/boardConstants'\n\nfunction Board({ board }) {\n\n    const dispatch = useDispatch()\n\n    const manageClickHandler = () => {\n        dispatch(getBoardToEdit(board.id))\n    }\n\n    return (\n        <Col md={4} sm={6} className='board-outer-container'>\n            <div className='board-inner-container'>\n                <p className='md-text'>{ board.title }</p>\n                <div>\n                    <span onClick={ manageClickHandler } className='blue-link sm-text'>manage</span>\n                    <Link to={`/board/${ board.id }`}><button className='button-custom button-custom-blue ml-3 sm-text'>view</button></Link>\n                </div>\n            </div>\n        </Col>\n    )\n}\n\nexport default Board","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport Row from 'react-bootstrap/Row';\n\nimport Board from './Board'\n\nfunction BoardContainer({ newBoards, newBoardIds, deletedBoards, setDeletedBoards }) {\n\n    const boardList = useSelector(state => state.boardList)\n    const { loading: listLoading, boards, error: listError } = boardList\n\n    const [boardsFromDB, setBoardsFromDB] = useState([])\n\n    function getUnique(arr, index) {\n        const unique = arr\n            .map(e => e[index])\n            .map((e, i, final) => final.indexOf(e) === i && i)\n            .filter(e => arr[e]).map(e => arr[e]);      \n      \n         return unique;\n    }\n\n    function removeDeletedBoards(arr, deletedBoards) {\n        for (var i = 0; i < arr.length; i++) {\n            var obj = arr[i];\n        \n            if (deletedBoards.indexOf(obj.id) !== -1) {\n                arr.splice(i, 1);\n                i--;\n            }\n        }\n    }\n\n    useEffect(() => {\n        if (boards) {\n            setBoardsFromDB(boards.map((board) => board))\n        }\n    }, [boards])\n\n    const uniqueNewBoards = getUnique(newBoards, 'id')\n\n    const toDelete = new Set([...deletedBoards]);\n    const completeNewBoards = uniqueNewBoards.filter(obj => !toDelete.has(obj.id));\n    const completeBoardsFromDB = boardsFromDB.filter(obj => !toDelete.has(obj.id));\n\n    return (\n        <Row className='board-container'>\n            { (completeNewBoards && completeNewBoards.length !== 0) && completeNewBoards.map((board) => (\n                <Board key={ board.id } board={ board } />\n            ))}\n            { (completeBoardsFromDB && completeBoardsFromDB.length !== 0) && completeBoardsFromDB.map((board) => (\n                ((newBoardIds && !newBoardIds.includes(board.id)) &&\n                <Board key={ board.id } board={ board } />\n                )\n            ))}\n\n            { ((((completeNewBoards && completeNewBoards.length === 0) && (completeBoardsFromDB && completeBoardsFromDB.length === 0))) && (!listLoading)) && \n                <div className='no-board-container'>\n                    <p className='grey-text lg-text'>you don't have any boards!</p>\n                </div>\n            }\n        </Row>\n    )\n}\n\nexport default BoardContainer","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport Loader from '../components/Loader'\nimport AddBoard from '../components/AddBoard'\nimport EditBoard from '../components/EditBoard'\nimport BoardContainer from '../components/BoardContainer'\n\nimport { listBoards } from '../actions/boardActions'\n\nfunction BoardScreen({ history }) {\n\n    const [createBoardOpen, setCreateBoardOpen] = useState(false)\n    const [newBoards, setNewBoards] = useState([])\n    const [newBoardIds, setNewBoardsIds] = useState([])\n    const [deletedBoards, setDeletedBoards] = useState([])\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { loading, userInfo, error } = userLogin\n\n    const boardToEdit = useSelector(state => state.boardToEdit)\n    const { loading: boardEditLoading , board, error: boardEditError, show: showEdit } = boardToEdit\n\n    const boardList = useSelector(state => state.boardList)\n    const { loading: listLoading, error: listError } = boardList\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        } else {\n            dispatch(listBoards())\n        }\n    }, [history, userInfo, dispatch])\n\n    return (\n        <div className='main-container'>\n            { (loading || listLoading) && <Loader /> }\n            { boardEditLoading && <Loader /> }\n            { createBoardOpen && <AddBoard open={ createBoardOpen } setOpen={ setCreateBoardOpen } newBoards={ newBoards } setNewBoards={ setNewBoards } /> }\n            { showEdit && <EditBoard newBoards={ newBoards } setNewBoards={ setNewBoards } newBoardIds={ newBoardIds } setNewBoardsIds={ setNewBoardsIds } deletedBoards={ deletedBoards } setDeletedBoards={ setDeletedBoards } />}\n            <div className='main-inner-container'>\n                <div className='button-float-right'>\n                    <button onClick={ () => setCreateBoardOpen(!createBoardOpen) } className='button-custom button-custom-blue'>create board</button>\n                </div>\n                <BoardContainer newBoards={ newBoards } newBoardIds={ newBoardIds } deletedBoards={ deletedBoards } setDeletedBoards={ setDeletedBoards } />\n            </div>\n        </div>\n    )\n}\n\nexport default BoardScreen","import axios from 'axios'\n\nimport {\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n\n    USER_LOGOUT,\n\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n} from '../constants/userConstants'\n\nexport const login = (username, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST\n        })\n\n        const config = {\n            headers:{\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            '/api/users/login/',\n            {'username': username, 'password': password},\n            config\n        )\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch(error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload: error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n        })\n    }\n}\n\nexport const register = (username, password, history) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_REGISTER_REQUEST\n        })\n\n        const config = {\n            headers:{\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            '/api/users/register/',\n            {'username': username, 'password': password},\n            config\n        )\n\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data\n        })\n\n        dispatch(login(username, password))\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch(error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload: error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n        })\n        history.push('/register')\n    }\n}\n\nexport const logout = () => (dispatch) => {\n    localStorage.removeItem('userInfo')\n    dispatch({\n        type: USER_LOGOUT\n    })\n}","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { login } from '../actions/userActions'\n\nimport Loader from '../components/Loader'\n\nfunction LoginScreen({ history }) {\n\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n\n    const dispatch = useDispatch()\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { loading, userInfo, error } = userLogin\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push('/')\n        }\n    }, [history, userInfo])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(login(username, password))\n    }\n\n    return (\n        <div className='main-container'>\n            { loading && <Loader /> }\n            <div className='main-inner-container login-container'>\n                <p className='lg-text'>login</p>\n                <form onSubmit={ submitHandler }>\n                    { error && \n                        <p className='sm-text form-error-text'>unable to find an account with this username and password!</p>\n                    }\n                    <input type='text'\n                        id='username'\n                        className='custom-input login-input'\n                        placeholder='username'\n                        required\n                        value={ username }\n                        onChange={ (e) => setUsername(e.target.value) }>\n                    </input>\n                    <br />\n                    <input type='password'\n                        id='password'\n                        className='custom-input login-input'\n                        placeholder='password'\n                        required\n                        value={ password }\n                        onChange={ (e) => setPassword(e.target.value) }>\n                    </input>\n                    <div>\n                        <Link to='/register' className='blue-link sm-text register-link'>register</Link>\n                        <button type='submit' className='button-custom button-custom-blue'>login</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default LoginScreen","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { register } from '../actions/userActions'\n\nimport Loader from '../components/Loader'\n\nfunction RegisterScreen({ history }) {\n\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    const [repeatPassword, setRepeatPassword] = useState('')\n    const [passwordError, setPasswordError] = useState(false)\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { loading, userInfo, error } = userLogin\n\n    const userRegister = useSelector(state => state.userRegister)\n    const { loading: registerLoading, error: registerError } = userRegister\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push('/')\n        }\n    }, [history, userInfo])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        if (password !== repeatPassword) {\n            setPasswordError(true)\n        } else {\n            setPasswordError(false)\n            dispatch(register(username, password, history))\n            history.push('/')\n        }\n    }\n\n    return (\n        <div className='main-container'>\n            { loading && <Loader /> }\n            <div className='main-inner-container login-container'>\n                <p className='lg-text'>register</p>\n                { registerError && <p className='sm-text form-error-text'>an account with this username already exists!</p> }\n                <form onSubmit={ submitHandler }>\n                    <input type='text'\n                        id='username'\n                        className='custom-input login-input'\n                        placeholder='username'\n                        value={ username }\n                        onChange={ (e) => setUsername(e.target.value) }\n                        required>\n                    </input>\n                    <br />\n                    { passwordError && <p className='sm-text form-error-text'>these passwords don't match!</p> }\n                    <input type='password'\n                        id='password'\n                        className='custom-input login-input'\n                        placeholder='password'\n                        value={ password }\n                        onChange={ (e) => setPassword(e.target.value) }\n                        required>\n                    </input>\n                    <br />\n                    <input type='password'\n                        id='repeat-password'\n                        className='custom-input login-input'\n                        placeholder='repeat password'\n                        value={ repeatPassword }\n                        onChange={ (e) => setRepeatPassword(e.target.value) }\n                        required>\n                    </input>\n                    <div>\n                        <Link to='/login' className='blue-link sm-text register-link'>login</Link>\n                        <button type='submit' className='button-custom button-custom-blue'>register</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default RegisterScreen","import axios from 'axios'\n\nimport {\n    TASK_LIST_REQUEST,\n    TASK_LIST_SUCCESS,\n    TASK_LIST_FAIL,\n\n    MONDAY_TASKS_REQUEST,\n    MONDAY_TASKS_SUCCESS,\n    MONDAY_TASKS_FAIL,\n\n    TUESDAY_TASKS_REQUEST,\n    TUESDAY_TASKS_SUCCESS,\n    TUESDAY_TASKS_FAIL,\n\n    WEDNESDAY_TASKS_REQUEST,\n    WEDNESDAY_TASKS_SUCCESS,\n    WEDNESDAY_TASKS_FAIL,\n\n    THURSDAY_TASKS_REQUEST,\n    THURSDAY_TASKS_SUCCESS,\n    THURSDAY_TASKS_FAIL,\n\n    FRIDAY_TASKS_REQUEST,\n    FRIDAY_TASKS_SUCCESS,\n    FRIDAY_TASKS_FAIL,\n\n    SATURDAY_TASKS_REQUEST,\n    SATURDAY_TASKS_SUCCESS,\n    SATURDAY_TASKS_FAIL,\n\n    SUNDAY_TASKS_REQUEST,\n    SUNDAY_TASKS_SUCCESS,\n    SUNDAY_TASKS_FAIL,\n\n    TASK_CREATE_REQUEST,\n    TASK_CREATE_SUCCESS,\n    TASK_CREATE_FAIL,\n\n    TASK_DELETE_REQUEST,\n    TASK_DELETE_SUCCESS,\n    TASK_DELETE_FAIL,\n\n    TASK_TO_EDIT_REQUEST,\n    TASK_TO_EDIT_SUCCESS,\n    TASK_TO_EDIT_FAIL,\n\n    TASK_UPDATE_REQUEST,\n    TASK_UPDATE_SUCCESS,\n    TASK_UPDATE_FAIL,\n\n    TASK_COMPLETE_REQUEST,\n    TASK_COMPLETE_SUCCESS,\n    TASK_COMPLETE_FAIL,\n} from '../constants/taskConstants'\n\nexport const listTasks = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: TASK_LIST_REQUEST\n        })\n\n        dispatch(getMondayTasks(id))\n        dispatch(getTuesdayTasks(id))\n        dispatch(getWednesdayTasks(id))\n        dispatch(getThursdayTasks(id))\n        dispatch(getFridayTasks(id))\n        dispatch(getSaturdayTasks(id))\n        dispatch(getSundayTasks(id))\n\n        dispatch({\n            type: TASK_LIST_SUCCESS,\n            payload: 'success!'\n        })\n\n    } catch(error) {\n        dispatch({\n            type: TASK_LIST_FAIL,\n            payload: error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n        })\n    }\n}\n\n\n\nexport const getMondayTasks = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: MONDAY_TASKS_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo }\n        } = getState()\n\n        const config = {\n            headers:{\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.access}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/tasks/get-monday-tasks/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: MONDAY_TASKS_SUCCESS,\n            payload: data\n        })\n\n    } catch(error) {\n        dispatch({\n            type: MONDAY_TASKS_FAIL,\n            payload: error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n        })\n    }\n}\n\nexport const getTuesdayTasks = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: TUESDAY_TASKS_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo }\n        } = getState()\n\n        const config = {\n            headers:{\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.access}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/tasks/get-tuesday-tasks/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: TUESDAY_TASKS_SUCCESS,\n            payload: data\n        })\n\n    } catch(error) {\n        dispatch({\n            type: TUESDAY_TASKS_FAIL,\n            payload: error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n        })\n    }\n}\n\nexport const getWednesdayTasks = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: WEDNESDAY_TASKS_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo }\n        } = getState()\n\n        const config = {\n            headers:{\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.access}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/tasks/get-wednesday-tasks/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: WEDNESDAY_TASKS_SUCCESS,\n            payload: data\n        })\n\n    } catch(error) {\n        dispatch({\n            type: WEDNESDAY_TASKS_FAIL,\n            payload: error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n        })\n    }\n}\n\nexport const getThursdayTasks = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: THURSDAY_TASKS_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo }\n        } = getState()\n\n        const config = {\n            headers:{\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.access}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/tasks/get-thursday-tasks/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: THURSDAY_TASKS_SUCCESS,\n            payload: data\n        })\n\n    } catch(error) {\n        dispatch({\n            type: THURSDAY_TASKS_FAIL,\n            payload: error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n        })\n    }\n}\n\nexport const getFridayTasks = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: FRIDAY_TASKS_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo }\n        } = getState()\n\n        const config = {\n            headers:{\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.access}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/tasks/get-friday-tasks/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: FRIDAY_TASKS_SUCCESS,\n            payload: data\n        })\n\n    } catch(error) {\n        dispatch({\n            type: FRIDAY_TASKS_FAIL,\n            payload: error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n        })\n    }\n}\n\nexport const getSaturdayTasks = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: SATURDAY_TASKS_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo }\n        } = getState()\n\n        const config = {\n            headers:{\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.access}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/tasks/get-saturday-tasks/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: SATURDAY_TASKS_SUCCESS,\n            payload: data\n        })\n\n    } catch(error) {\n        dispatch({\n            type: SATURDAY_TASKS_FAIL,\n            payload: error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n        })\n    }\n}\n\nexport const getSundayTasks = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: SUNDAY_TASKS_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo }\n        } = getState()\n\n        const config = {\n            headers:{\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.access}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/tasks/get-sunday-tasks/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: SUNDAY_TASKS_SUCCESS,\n            payload: data\n        })\n\n    } catch(error) {\n        dispatch({\n            type: SUNDAY_TASKS_FAIL,\n            payload: error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n        })\n    }\n}\n\nexport const createTask = (title, classId, taskType, day, hour, minute, am, { newTasks, setNewTasks }) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: TASK_CREATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo }\n        } = getState()\n\n        const {\n            weekView: { week }\n        } = getState()\n\n        const config = {\n            headers:{\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.access}`\n            }\n        }\n\n        const { data } = await axios.post(\n            '/api/tasks/create-task/',\n            {'weekId': week.id, 'title': title, 'classId': classId, 'taskType': taskType, 'day': day, 'hour': hour, 'minute': minute, 'am': am},\n            config\n        )\n\n        dispatch({\n            type: TASK_CREATE_SUCCESS,\n            payload: data\n        })\n\n        setNewTasks([data, ...newTasks])\n\n    } catch(error) {\n        dispatch({\n            type: TASK_CREATE_FAIL,\n            payload: error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n        })\n    }\n}\n\nexport const deleteTask = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: TASK_DELETE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo }\n        } = getState()\n\n        const config = {\n            headers:{\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.access}`\n            }\n        }\n\n        const { data } = await axios.delete(\n            `/api/tasks/delete-task/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: TASK_DELETE_SUCCESS,\n            payload: data\n        })\n\n    } catch(error) {\n        dispatch({\n            type: TASK_DELETE_FAIL,\n            payload: error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n        })\n    }\n}\n\nexport const getTaskToEdit = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: TASK_TO_EDIT_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo }\n        } = getState()\n\n        const config = {\n            headers:{\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.access}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/tasks/get-task/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: TASK_TO_EDIT_SUCCESS,\n            payload: data\n        })\n\n    } catch(error) {\n        dispatch({\n            type: TASK_TO_EDIT_FAIL,\n            payload: error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n        })\n    }\n}\n\nexport const updateTask = (title, classId, taskType, day, hour, minute, am, { newTasks, setNewTasks, newTasksIds, setNewTasksIds }) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: TASK_UPDATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo }\n        } = getState()\n\n        const {\n            weekView: { week }\n        } = getState()\n\n        const {\n            taskToEdit: { task }\n        } = getState()\n\n        const config = {\n            headers:{\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.access}`\n            }\n        }\n\n        const { data } = await axios.put(\n            '/api/tasks/update-task/',\n            {'taskId': task.id, 'weekId': week.id, 'title': title, 'classId': classId, 'taskType': taskType, 'day': day, 'hour': hour, 'minute': minute, 'am': am},\n            config\n        )\n\n        dispatch({\n            type: TASK_UPDATE_SUCCESS,\n            payload: data\n        })\n\n        setNewTasks([data, ...newTasks])\n        setNewTasksIds([data.id, ...newTasksIds])\n\n    } catch(error) {\n        dispatch({\n            type: TASK_UPDATE_FAIL,\n            payload: error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n        })\n    }\n}\n\nexport const completeTask = (id, { newTasks, setNewTasks, newTasksIds, setNewTasksIds }) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: TASK_COMPLETE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo }\n        } = getState()\n\n        const config = {\n            headers:{\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.access}`\n            }\n        }\n\n        const { data } = await axios.put(\n            '/api/tasks/complete-task/',\n            {'id': id},\n            config\n        )\n\n        dispatch({\n            type: TASK_COMPLETE_SUCCESS,\n            payload: data\n        })\n\n        setNewTasks([data, ...newTasks])\n        setNewTasksIds([data.id, ...newTasksIds])\n\n    } catch(error) {\n        dispatch({\n            type: TASK_COMPLETE_FAIL,\n            payload: error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n        })\n    }\n}","function getWeekDays(month, day) {\n    var monthDays = {\n        '1': 31,\n        '2': 28,\n        '3': 31,\n        '4': 30,\n        '5': 31,\n        '6': 30,\n        '7': 31,\n        '8': 31,\n        '9': 30,\n        '10': 31,\n        '11': 30,\n        '12': 31\n    }\n    const days = []\n    const maxDay = monthDays[String(month)]\n\n    for (let i = 0; i < 7; i++) {\n        if (i + day > maxDay) {\n            if (month + 1 > 12) {\n                days.push('1/' + String((day + i) - maxDay))\n            } else {\n                days.push(String(month + 1) + '/' + String((day + i) - maxDay))\n            }\n        } else {\n            days.push(String(month) + '/' + String(day + i))\n        }\n    }\n    \n    return days\n}\n\nexport default getWeekDays","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { Link } from 'react-router-dom';\n\nimport Col from 'react-bootstrap/Col';\n\nimport getWeekDays from '../helper_functions/getWeekDays'\nimport { getWeekToEdit } from '../actions/weekActions'\n\nfunction Week({ week, openEdit, setOpenEdit }) {  \n\n    const days = getWeekDays(week.month, week.day)\n\n    const dispatch = useDispatch()\n\n    const manageClickHandler = () => {\n        setOpenEdit(!openEdit)\n        dispatch(getWeekToEdit(week.id))\n    }\n\n    return (\n        <Col md={4} sm={6} className='board-outer-container'>\n            <div className='board-inner-container'>\n                <p className='md-text'>{ week.month }/{week.day} - { days[6] }</p>\n                <div>\n                    <span onClick={ manageClickHandler } className='blue-link sm-text'>manage</span>\n                    <Link to={`/week/${ week.id }`}><button className='button-custom button-custom-blue ml-3 sm-text'>view</button></Link>\n                </div>\n            </div>\n        </Col>\n    )\n}\n\nexport default Week","import axios from 'axios'\n\nimport {\n    WEEK_LIST_REQUEST,\n    WEEK_LIST_SUCCESS,\n    WEEK_LIST_FAIL,\n\n    WEEK_ADD_REQUEST,\n    WEEK_ADD_SUCCESS,\n    WEEK_ADD_FAIL,\n\n    WEEK_TO_EDIT_REQUEST,\n    WEEK_TO_EDIT_SUCCESS,\n    WEEK_TO_EDIT_FAIL,\n    WEEK_TO_EDIT_RESET,\n\n    WEEK_DELETE_REQUEST,\n    WEEK_DELETE_SUCCESS,\n    WEEK_DELETE_FAIL,\n\n    WEEK_UPDATE_REQUEST,\n    WEEK_UPDATE_SUCCESS,\n    WEEK_UPDATE_FAIL,\n\n    WEEK_VIEW_REQUEST,\n    WEEK_VIEW_SUCCESS,\n    WEEK_VIEW_FAIL,\n\n    WEEK_DAYS,\n\n    WEEK_CLASSES_REQUEST,\n    WEEK_CLASSES_SUCCESS,\n    WEEK_CLASSES_FAIL,\n} from '../constants/weekConstants'\n\nimport {\n    BOARD_VIEW_REQUEST,\n    BOARD_VIEW_SUCCESS,\n    BOARD_VIEW_FAIL,\n} from '../constants/boardConstants'\n\nimport { listTasks } from './taskActions'\nimport getWeekDays from '../helper_functions/getWeekDays'\n\nexport const listWeeks = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: WEEK_LIST_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo }\n        } = getState()\n\n        const config = {\n            headers:{\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.access}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/weeks/get-all-weeks/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: WEEK_LIST_SUCCESS,\n            payload: data\n        })\n\n    } catch(error) {\n        dispatch({\n            type: WEEK_LIST_FAIL,\n            payload: error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n        })\n    }\n}\n\nexport const addWeek = (month, day, { newWeeks, setNewWeeks }) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: WEEK_ADD_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo }\n        } = getState()\n\n        const {\n            boardView: { board }\n        } = getState()\n\n        const config = {\n            headers:{\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.access}`\n            }\n        }\n\n        const { data } = await axios.post(\n            '/api/weeks/add-week/',\n            {'month': month, 'day': day, 'board': board.id},\n            config\n        )\n\n        dispatch({\n            type: WEEK_ADD_SUCCESS,\n            payload: data\n        })\n\n        setNewWeeks([data, ...newWeeks])\n\n    } catch(error) {\n        dispatch({\n            type: WEEK_ADD_FAIL,\n            payload: error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n        })\n    }\n}\n\nexport const getWeekToEdit = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: WEEK_TO_EDIT_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo }\n        } = getState()\n\n        const config = {\n            headers:{\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.access}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/weeks/get-week/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: WEEK_TO_EDIT_SUCCESS,\n            payload: data\n        })\n\n    } catch(error) {\n        dispatch({\n            type: WEEK_TO_EDIT_FAIL,\n            payload: error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n        })\n    }\n}\n\nexport const deleteWeek = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: WEEK_DELETE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo }\n        } = getState()\n\n        const {\n            weekToEdit: { week }\n        } = getState()\n\n        const config = {\n            headers:{\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.access}`\n            }\n        }\n\n        const { data } = await axios.delete(\n            `/api/weeks/delete-week/${week.id}`,\n            config\n        )\n\n        dispatch({\n            type: WEEK_DELETE_SUCCESS,\n            payload: data\n        })\n\n    } catch(error) {\n        dispatch({\n            type: WEEK_DELETE_FAIL,\n            payload: error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n        })\n    }\n}\n\nexport const updateBoard = (id, month, day, { newWeeks, setNewWeeks, newWeeksIds, setNewWeeksIds }) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: WEEK_UPDATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo }\n        } = getState()\n\n        const config = {\n            headers:{\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.access}`\n            }\n        }\n\n        const { data } = await axios.put(\n            '/api/weeks/update-week/',\n            {'id': id, 'month': month, 'day': day},\n            config\n        )\n\n        dispatch({\n            type: WEEK_UPDATE_SUCCESS,\n            payload: data\n        })\n\n        setNewWeeks([data, ...newWeeks])\n        setNewWeeksIds([data.id, ...newWeeksIds])\n\n    } catch(error) {\n        dispatch({\n            type: WEEK_UPDATE_FAIL,\n            payload: error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n        })\n    }\n}\n\nexport const getBoardFromWeek = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: BOARD_VIEW_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo }\n        } = getState()\n\n        const config = {\n            headers:{\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.access}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/weeks/get-board-from-week/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: BOARD_VIEW_SUCCESS,\n            payload: data\n        })\n\n    } catch(error) {\n        dispatch({\n            type: BOARD_VIEW_FAIL,\n            payload: error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n        })\n    }\n}\n\nexport const getWeek = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: WEEK_VIEW_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo }\n        } = getState()\n\n        const config = {\n            headers:{\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.access}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/weeks/get-week/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: WEEK_VIEW_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: WEEK_DAYS,\n            payload: getWeekDays(data.month, data.day)\n        })\n\n        dispatch(listTasks(id))\n\n    } catch(error) {\n        dispatch({\n            type: WEEK_VIEW_FAIL,\n            payload: error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n        })\n    }\n}\n\nexport const getClassesFromWeek = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: WEEK_CLASSES_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo }\n        } = getState()\n\n        const config = {\n            headers:{\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.access}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/weeks/get-classes-from-week/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: WEEK_CLASSES_SUCCESS,\n            payload: data\n        })\n\n    } catch(error) {\n        dispatch({\n            type: WEEK_CLASSES_FAIL,\n            payload: error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n        })\n    }\n}","import React, { useState, useEffect } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport Week from './Week'\n\nimport Row from 'react-bootstrap/Row';\n\nfunction WeekContainer({ openEdit, setOpenEdit, newWeeks, newWeeksIds, deletedWeeks, setDeletedWeeks }) {\n\n    const weekList = useSelector(state => state.weekList)\n    const { loading, weeks, error } = weekList\n\n    const [weeksFromDB, setWeeksFromDB] = useState([])\n\n    function getUnique(arr, index) {\n        const unique = arr\n            .map(e => e[index])\n            .map((e, i, final) => final.indexOf(e) === i && i)\n            .filter(e => arr[e]).map(e => arr[e]);      \n      \n         return unique;\n    }\n\n    function removeDeletedBoards(arr, deletedBoards) {\n        for (var i = 0; i < arr.length; i++) {\n            var obj = arr[i];\n        \n            if (deletedBoards.indexOf(obj.id) !== -1) {\n                arr.splice(i, 1);\n                i--;\n            }\n        }\n    }\n\n    useEffect(() => {\n        if (weeks) {\n            setWeeksFromDB(weeks.map((week) => week))\n        }\n    }, [weeks])\n\n    const uniqueNewWeeks = getUnique(newWeeks, 'id')\n\n    const toDelete = new Set([...deletedWeeks]);\n    const completeNewWeeks = uniqueNewWeeks.filter(obj => !toDelete.has(obj.id));\n    const completeWeeksFromDB = weeksFromDB.filter(obj => !toDelete.has(obj.id));\n\n\n    return (\n        <div>\n            <Row className='board-container week-container'>\n                \n                \n                { (completeNewWeeks && completeNewWeeks.length !== 0) && completeNewWeeks.map((week) => (\n                    <Week key={ week.id } week={ week } openEdit={ openEdit } setOpenEdit={ setOpenEdit } />\n                ))}\n                { (completeWeeksFromDB && completeWeeksFromDB.length !== 0) && completeWeeksFromDB.map((week) => (\n                    ((newWeeksIds && !newWeeksIds.includes(week.id)) &&\n                    <Week key={ week.id } week={ week } openEdit={ openEdit } setOpenEdit={ setOpenEdit } />\n                    )\n                ))}\n\n                { ((((completeNewWeeks && completeNewWeeks.length === 0) && (completeWeeksFromDB && completeWeeksFromDB.length === 0))) && (!loading)) && \n                    <div className='no-board-container'>\n                        <p className='grey-text lg-text'>you don't have any weeks!</p>\n                    </div>\n                }\n\n\n\n            </Row>\n        </div>\n    )\n}\n\nexport default WeekContainer","import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { addWeek } from '../actions/weekActions'\n\nfunction AddWeek({ openAdd, setOpenAdd, newWeeks, setNewWeeks }) {\n\n    const [month, setMonth] = useState(1)\n    const [day, setDay] = useState(1)\n\n    const dispatch = useDispatch()\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(addWeek(month, day, { newWeeks, setNewWeeks }))\n        setOpenAdd(!openAdd)\n    }\n\n    return (\n        <div className='popup-container'>\n            <div className='popup'>\n                <form onSubmit={ submitHandler }>\n                    <label>start date</label>\n                    <br />\n                    <div className='date-select-container'>\n                        <select\n                            name='month'\n                            id='month'\n                            className='custom-select my-custom-select month-select'\n                            value={ month }\n                            onChange={ (e) => setMonth(e.target.value) }\n                            required\n                        >\n                                <option value='1'>january</option>\n                                <option value='2'>february</option>\n                                <option value='3'>march</option>\n                                <option value='4'>april</option>\n                                <option value='5'>may</option>\n                                <option value='6'>june</option>\n                                <option value='7'>july</option>\n                                <option value='8'>august</option>\n                                <option value='9'>september</option>\n                                <option value='10'>october</option>\n                                <option value='11'>november</option>\n                                <option value='12'>december</option>\n                        </select>\n                        <input\n                            type='number'\n                            min='1'\n                            max='31'\n                            id='day'\n                            name='day'\n                            placeholder='enter day'\n                            className='custom-input day-select'\n                            value={ day }\n                            onChange={ (e) => setDay(e.target.value) }\n                            required\n                        >\n                        </input>\n                    </div>\n                    <div className='mt-3 button-float-right'>\n                        <span onClick={ () => setOpenAdd(!openAdd) } className='blue-link'>cancel</span>\n                        <button type='submit' className='button-custom button-custom-blue ml-3'>add</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default AddWeek","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { deleteWeek } from '../actions/weekActions'\n\nfunction DeleteWeekPopup({ showDeleteWeekConfirm, setShowDeleteWeekConfirm, openEdit, setOpenEdit, deletedWeeks, setDeletedWeeks }) {\n\n    const dispatch = useDispatch()\n\n    const weekToEdit = useSelector(state => state.weekToEdit)\n    const { week } = weekToEdit\n\n    const deleteCurrentWeek = () => {\n        dispatch(deleteWeek())\n        setDeletedWeeks([...deletedWeeks, week.id])\n        setShowDeleteWeekConfirm(!showDeleteWeekConfirm)\n        setOpenEdit(!openEdit)\n    }\n\n    return (\n        <div className='popup-container'>\n            <div className='popup delete-popup'>\n                <p>are you sure you want to delete this week?</p>\n                <p className='sm-text delete-confirm-text'>all assignments related to this week will be deleted. this action cannot be undone!</p>\n                <div className='mt-1 button-float-right'>\n                    <span onClick={ () => setShowDeleteWeekConfirm(!showDeleteWeekConfirm) } className='blue-link'>cancel</span>\n                    <button onClick={ deleteCurrentWeek } type='button' className='button-custom button-custom-red ml-3'>delete</button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default DeleteWeekPopup","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport DeleteWeekPopup from './DeleteWeekPopup'\nimport Loader from '../components/Loader'\n\nimport { updateBoard } from '../actions/weekActions'\n\nimport { WEEK_TO_EDIT_RESET } from '../constants/weekConstants'\n\nfunction EditWeek({ openEdit, setOpenEdit, newWeeks, setNewWeeks, newWeeksIds, setNewWeeksIds, deletedWeeks, setDeletedWeeks }) {\n\n    const [month, setMonth] = useState(1)\n    const [day, setDay] = useState(1)\n    const [showDeleteWeekConfirm, setShowDeleteWeekConfirm] = useState(false)\n\n    const weekToEdit = useSelector(state => state.weekToEdit)\n    const { loading, week, error } = weekToEdit\n\n    const dispatch = useDispatch()\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(updateBoard(week.id, month, day, { newWeeks, setNewWeeks, newWeeksIds, setNewWeeksIds }))\n        setOpenEdit(!openEdit)\n    }\n\n    const cancelClickHandler = () => {\n        setOpenEdit(!openEdit)\n        dispatch({\n            type: WEEK_TO_EDIT_RESET\n        })\n    }\n\n    useEffect(() => {\n        if (week) {\n            setMonth(week['month'])\n            setDay(week['day'])\n        }\n    }, [week])\n\n    return (\n        <div className='popup-container'>\n            { showDeleteWeekConfirm && <DeleteWeekPopup showDeleteWeekConfirm={ showDeleteWeekConfirm } setShowDeleteWeekConfirm={ setShowDeleteWeekConfirm } openEdit={ openEdit } setOpenEdit={ setOpenEdit } deletedWeeks={ deletedWeeks } setDeletedWeeks={ setDeletedWeeks } /> }\n            <div className='popup'>\n            <span onClick={ () => setShowDeleteWeekConfirm(!showDeleteWeekConfirm) } ><i className=\"fal fa-trash-alt trash-icon button-float-right\"></i></span>\n                <form onSubmit={ submitHandler }>\n                    <label>start date</label>\n                    <br />\n                    <div className='date-select-container'>\n                        <select\n                            name='month'\n                            id='month'\n                            className='custom-select my-custom-select month-select'\n                            value={ month }\n                            onChange={ (e) => setMonth(parseInt(e.target.value)) }>\n                                <option value='1'>january</option>\n                                <option value='2'>february</option>\n                                <option value='3'>march</option>\n                                <option value='4'>april</option>\n                                <option value='5'>may</option>\n                                <option value='6'>june</option>\n                                <option value='7'>july</option>\n                                <option value='8'>august</option>\n                                <option value='9'>september</option>\n                                <option value='10'>october</option>\n                                <option value='11'>november</option>\n                                <option value='12'>december</option>\n                        </select>\n                        <input\n                            type='number'\n                            min='1'\n                            max='31'\n                            id='day'\n                            name='day'\n                            placeholder='enter day'\n                            className='custom-input day-select'\n                            value={ day }\n                            onChange={ (e) => setDay(parseInt(e.target.value)) }>\n                        </input>\n                    </div>\n                    <div className='mt-3 button-float-right'>\n                        <span onClick={ cancelClickHandler } className='blue-link'>cancel</span>\n                        <button type='submit' className='button-custom button-custom-blue ml-3'>edit</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default EditWeek","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link, useParams } from 'react-router-dom';\n\nimport { getBoard } from '../actions/boardActions'\nimport { listWeeks } from '../actions/weekActions'\n\nimport Loader from '../components/Loader'\nimport WeekContainer from '../components/WeekContainer'\nimport AddWeek from '../components/AddWeek'\nimport EditWeek from '../components/EditWeek'\n\nfunction BoardViewScreen({ history }) {\n\n    const [openAdd, setOpenAdd] = useState(false)\n    const [openEdit, setOpenEdit] = useState(false)\n    const [newWeeks, setNewWeeks] = useState([])\n    const [newWeeksIds, setNewWeeksIds] = useState([])\n    const [deletedWeeks, setDeletedWeeks] = useState([])\n\n    const id = useParams()['id']\n\n    const dispatch = useDispatch()\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { loading, userInfo, error } = userLogin\n\n    const boardView = useSelector(state => state.boardView)\n    const { loading: boardLoading, board, error: boardError } = boardView\n\n    const weekToEdit = useSelector(state => state.weekToEdit)\n    const { loading: weekLoading, error: weekError } = weekToEdit\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        } else {\n            dispatch(getBoard(id))\n            dispatch(listWeeks(id))\n        }\n    }, [history, userInfo, dispatch, id])\n\n    return (\n        <div className='main-container'>\n            { (loading || boardLoading || weekLoading) && <Loader /> }\n            { openAdd && <AddWeek openAdd={ openAdd } setOpenAdd={ setOpenAdd } newWeeks={ newWeeks } setNewWeeks={ setNewWeeks } /> }\n            { openEdit && <EditWeek openEdit={ openEdit } setOpenEdit={ setOpenEdit } newWeeks={ newWeeks } setNewWeeks={ setNewWeeks } newWeeksIds={ newWeeksIds } setNewWeeksIds={ setNewWeeksIds } deletedWeeks={ deletedWeeks } setDeletedWeeks={ setDeletedWeeks } /> }\n            <div className='main-inner-container'>\n                <Link to='/' className='blue-link'>\n                        <i className=\"far fa-long-arrow-left\"></i> back\n                </Link>\n                <button onClick={ () => setOpenAdd(!openAdd) } className='button-custom button-custom-blue button-float-right'>add week</button>\n                <div className='title-container'>\n                    <p>{ board && board.title }</p>\n                </div>\n                <WeekContainer newWeeks={ newWeeks } newWeeksIds={ newWeeksIds } deletedWeeks={ deletedWeeks } setDeletedWeeks={ setDeletedWeeks } openEdit={ openEdit } setOpenEdit={ setOpenEdit } />\n            </div>\n        </div>\n    )\n}\n\nexport default BoardViewScreen","import React from 'react'\nimport { useDispatch } from 'react-redux'\n\nimport { deleteTask, getTaskToEdit, completeTask } from '../actions/taskActions'\n\nfunction TaskDropdown({ task, showDropdown, setShowDropdown, openEdit, setOpenEdit, newTasks, setNewTasks, newTasksIds, setNewTasksIds, deletedTasks, setDeletedTasks }) {\n\n    const dispatch = useDispatch()\n\n    const completedClickHandler = () => {\n        dispatch(completeTask(task.id, { newTasks, setNewTasks, newTasksIds, setNewTasksIds }))\n        setShowDropdown(!showDropdown)\n    }\n\n    const editClickHandler = () => {\n        dispatch(getTaskToEdit(task.id))\n        setOpenEdit(!openEdit)\n        setShowDropdown(!showDropdown)\n    }\n\n    const deleteHandler = () => {\n        dispatch(deleteTask(task.id))\n        setDeletedTasks([...deletedTasks, task.id])\n        setShowDropdown(!showDropdown)\n    }\n\n    return (\n        <div className='task-dropdown-outer'>\n            <div className='task-dropdown-inner'>\n                <div onClick={ editClickHandler } className='task-dropdown-item'>\n                    <span>edit</span>\n                </div>\n                <div onClick={ completedClickHandler } className='task-dropdown-item'>\n                    <span>{ task.completed ? 'mark as uncomplete' : 'mark as completed' }</span>\n                </div>\n                <div onClick={ deleteHandler } className='task-dropdown-item task-dropdown-item-delete'>\n                    <span>delete <span className='button-float-right'><i className=\"fal fa-trash-alt\"></i></span></span>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default TaskDropdown","import React, { useState, useEffect } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport TaskDropdown from './TaskDropdown'\n\nfunction Task({ task, openEdit, setOpenEdit, newTasks, setNewTasks, newTasksIds, setNewTasksIds, deletedTasks, setDeletedTasks }) {\n\n    const [showDropdown, setShowDropdown] = useState(false)\n    const [currentClassName, setCurrentClassName] = useState('')\n\n    const weekClasses = useSelector(state => state.weekClasses)\n    const { classes } = weekClasses\n\n    useEffect(() => {\n        if (classes) {\n            for (var i = 0; i < classes.length; i++) {\n                var obj = classes[i]\n                \n                if (obj.id === task.class_name) {\n                    setCurrentClassName(obj.title);\n                    console.log(obj.title)\n                }\n            }\n        }\n    }, [task, classes])\n\n    return (\n        <Row className={ task.completed ? 'completed-task' : ''}>\n            { showDropdown && <TaskDropdown task={ task } showDropdown={ showDropdown } setShowDropdown={ setShowDropdown } openEdit={ openEdit } setOpenEdit={ setOpenEdit } newTasks={ newTasks } setNewTasks={ setNewTasks } newTasksIds={ newTasksIds } setNewTasksIds={ setNewTasksIds } deletedTasks={ deletedTasks } setDeletedTasks={ setDeletedTasks } /> }\n            <Col sm={2} xs={1}>\n                { (task.type === 'reading') &&\n                    <i className={ task.completed ? 'fal fa-book assignment-icon completed-icon' : 'fal fa-book assignment-icon'}></i>\n                }\n                { (task.type === 'test') &&\n                    <i className={ task.completed ? 'fal fa-ballot-check assignment-icon completed-icon' : 'fal fa-ballot-check assignment-icon'}></i>\n                }\n                { (task.type === 'assignment') &&\n                    <i className={ task.completed ? 'fal fa-pencil assignment-icon completed-icon' : 'fal fa-pencil assignment-icon'}></i>\n                }\n                { (task.type === 'meeting') &&\n                    <i className={ task.completed ? 'fal fa-chalkboard-teacher assignment-icon completed-icon' : 'fal fa-chalkboard-teacher assignment-icon'}></i>\n                }\n            </Col>\n            <Col sm={10} xs={10}>\n                <p className='mb-0 grey-text xsm-text'>{currentClassName}</p>\n                <p className={ task.completed ? 'grey-text mb-0' : 'mb-0'}>{task.title}</p>\n                <p className='mb-0 grey-text sm-text'>{ task.time_hour && task.time_hour}{ (task.time_minute && task.time_minute > 9) ? `:${task.time_minute}` : ''}{ (task.time_minute && task.time_minute < 9) ? `:0${task.time_minute}` : ''}{ (task.time_hour && task.am) && 'am' }{ (task.time_hour && !task.am) && 'pm' }</p>\n                <span onClick={ () => setShowDropdown(!showDropdown) } className='button-float-right'><i className={ task.completed ? 'far fa-ellipsis-h completed-icon pointer-icon' : 'far fa-ellipsis-h blue-icon'}></i></span>\n            </Col>\n        </Row>\n    )\n}\n\nexport default Task","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom';\n\nimport Col from 'react-bootstrap/Col';\n\nimport Task from './Task'\n\nfunction Day({ day, date, tasks, openEdit, setOpenEdit, newTasks, setNewTasks, newTasksIds, setNewTasksIds, deletedTasks, setDeletedTasks }) {\n\n    const taskList = useSelector(state => state.taskList)\n    const { loading, error } = taskList\n\n    const [tasksFromDB, setTasksFromDB] = useState([])\n\n    function getUnique(arr, index) {\n        const unique = arr\n            .map(e => e[index])\n            .map((e, i, final) => final.indexOf(e) === i && i)\n            .filter(e => arr[e]).map(e => arr[e]);      \n      \n         return unique;\n    }\n\n    function removeDeletedTasks(arr, deletedTasks) {\n        for (var i = 0; i < arr.length; i++) {\n            var obj = arr[i];\n        \n            if (deletedTasks.indexOf(obj.id) !== -1) {\n                arr.splice(i, 1);\n                i--;\n            }\n        }\n    }\n\n    const stringToNumber = {\n        'monday': 0,\n        'tuesday': 1,\n        'wednesday': 2,\n        'thursday': 3,\n        'friday': 4,\n        'saturday': 5,\n        'sunday': 6,\n    }\n\n    useEffect(() => {\n        if (tasks) {\n            setTasksFromDB(tasks.map((task) => task))\n        }\n    }, [tasks])\n\n    const uniqueNewTasks = getUnique(newTasks, 'id')\n\n    const toDelete = new Set([...deletedTasks]);\n    const completeNewTasks = uniqueNewTasks.filter(obj => !toDelete.has(obj.id));\n    const completeTasksFromDB = tasksFromDB.filter(obj => !toDelete.has(obj.id));\n\n    return (\n        <Col lg={3} md={4} sm={6} className='board-outer-container'>\n            <div className='day-container'>\n                <div className='day-top'>\n                    <p className='mb-0 lg-text'>{ day && day }</p>\n                    <p className='sm-text mb-0'>{ date && date }</p>\n                </div>\n                <div className='day-main'>\n                    { (completeNewTasks && completeNewTasks.length !== 0) && completeNewTasks.map((task) => (\n                        (task.day === stringToNumber[day] &&\n                        <Task key={ task.id } task={ task } openEdit={ openEdit } setOpenEdit={ setOpenEdit } newTasks={ newTasks } setNewTasks={ setNewTasks } newTasksIds={ newTasksIds } setNewTasksIds={ setNewTasksIds } deletedTasks={ deletedTasks } setDeletedTasks={ setDeletedTasks } />\n                        )\n                    ))}\n                    { (completeTasksFromDB && completeTasksFromDB.length !== 0) && completeTasksFromDB.map((task) => (\n                        ((newTasksIds && !newTasksIds.includes(task.id)) &&\n                        <Task key={ task.id } task={ task } openEdit={ openEdit } setOpenEdit={ setOpenEdit } newTasks={ newTasks } setNewTasks={ setNewTasks } newTasksIds={ newTasksIds } setNewTasksIds={ setNewTasksIds } deletedTasks={ deletedTasks } setDeletedTasks={ setDeletedTasks } />\n                        )\n                    ))}\n\n                    {/* ((((completeNewTasks && completeNewTasks.length === 0) && (completeTasksFromDB && completeTasksFromDB.length === 0))) && (!loading)) && \n                        <p className='grey-text mb-0 text-center'>no assignment's :)</p>\n                    */}\n                </div>\n            </div>\n        </Col>\n    )\n}\n\nexport default Day","import React, { useState, useEffect } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport Day from './Day'\n\nimport Row from 'react-bootstrap/Row';\n\nfunction DayContainer({ openEdit, setOpenEdit, newTasks, setNewTasks, newTasksIds, setNewTasksIds, deletedTasks, setDeletedTasks }) {\n\n    const weekDays = useSelector(state => state.weekDays)\n    const { days } = weekDays\n\n    const mondayTasks = useSelector(state => state.mondayTasks)\n    const { tasks: mondayTaskList } = mondayTasks\n\n    const tuesdayTasks = useSelector(state => state.tuesdayTasks)\n    const { tasks: tuesdayTaskList } = tuesdayTasks\n\n    const wednesdayTasks = useSelector(state => state.wednesdayTasks)\n    const { tasks: wednesdayTaskList } = wednesdayTasks\n\n    const thursdayTasks = useSelector(state => state.thursdayTasks)\n    const { tasks: thursdayTaskList } = thursdayTasks\n\n    const fridayTasks = useSelector(state => state.fridayTasks)\n    const { tasks: fridayTaskList } = fridayTasks\n\n    const saturdayTasks = useSelector(state => state.saturdayTasks)\n    const { tasks: saturdayTaskList } = saturdayTasks\n\n    const sundayTasks = useSelector(state => state.sundayTasks)\n    const { tasks: sundayTaskList } = sundayTasks\n\n    const taskList = useSelector(state => state.taskList)\n    const { loading, tasks, error } = taskList\n\n    return (\n        <div>\n            <Row className='board-container week-container'>\n                <Day day={'monday'} date={ days && days[0] } tasks={ mondayTaskList } openEdit={ openEdit } setOpenEdit={ setOpenEdit } newTasks={ newTasks } setNewTasks={ setNewTasks } newTasksIds={ newTasksIds } setNewTasksIds={ setNewTasksIds } deletedTasks={ deletedTasks } setDeletedTasks={ setDeletedTasks } />\n                <Day day={'tuesday'} date={ days && days[1] } tasks={ tuesdayTaskList } openEdit={ openEdit } setOpenEdit={ setOpenEdit } newTasks={ newTasks } setNewTasks={ setNewTasks } newTasksIds={ newTasksIds } setNewTasksIds={ setNewTasksIds } deletedTasks={ deletedTasks } setDeletedTasks={ setDeletedTasks } />\n                <Day day={'wednesday'} date={ days && days[2] } tasks={ wednesdayTaskList } openEdit={ openEdit } setOpenEdit={ setOpenEdit } newTasks={ newTasks } setNewTasks={ setNewTasks } newTasksIds={ newTasksIds } setNewTasksIds={ setNewTasksIds } deletedTasks={ deletedTasks } setDeletedTasks={ setDeletedTasks } />\n                <Day day={'thursday'} date={ days && days[3] } tasks={ thursdayTaskList } openEdit={ openEdit } setOpenEdit={ setOpenEdit } newTasks={ newTasks } setNewTasks={ setNewTasks } newTasksIds={ newTasksIds } setNewTasksIds={ setNewTasksIds } deletedTasks={ deletedTasks } setDeletedTasks={ setDeletedTasks } />\n                <Day day={'friday'} date={ days && days[4] } tasks={ fridayTaskList } openEdit={ openEdit } setOpenEdit={ setOpenEdit } newTasks={ newTasks } setNewTasks={ setNewTasks } newTasksIds={ newTasksIds } setNewTasksIds={ setNewTasksIds } deletedTasks={ deletedTasks } setDeletedTasks={ setDeletedTasks } />\n                <Day day={'saturday'} date={ days && days[5] } tasks={ saturdayTaskList } openEdit={ openEdit } setOpenEdit={ setOpenEdit } newTasks={ newTasks } setNewTasks={ setNewTasks } newTasksIds={ newTasksIds } setNewTasksIds={ setNewTasksIds } deletedTasks={ deletedTasks } setDeletedTasks={ setDeletedTasks } />\n                <Day day={'sunday'} date={ days && days[6] } tasks={ sundayTaskList } openEdit={ openEdit } setOpenEdit={ setOpenEdit } newTasks={ newTasks } setNewTasks={ setNewTasks } newTasksIds={ newTasksIds } setNewTasksIds={ setNewTasksIds } deletedTasks={ deletedTasks } setDeletedTasks={ setDeletedTasks } />\n            </Row>\n        </div>\n    )\n}\n\nexport default DayContainer","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { createTask } from '../actions/taskActions'\n\nfunction AddTask({ openAdd, setOpenAdd, newTasks, setNewTasks }) {\n\n    const weekClasses = useSelector(state => state.weekClasses)\n    const { loading, classes, error } = weekClasses\n\n    const [title, setTitle] = useState('')\n    const [classId, setClassId] = useState()\n    const [taskType, setTaskType] = useState('reading')\n    const [day, setDay] = useState('0')\n    const [hour, setHour] = useState(12)\n    const [minute, setMinute] = useState(59)\n    const [am, setAm] = useState(false)\n\n    const dispatch = useDispatch()\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(createTask(title, classId, taskType, day, hour, minute, am, { newTasks, setNewTasks }))\n        setOpenAdd(!openAdd)\n    }\n\n    useEffect(() => {\n        if (classes && classes.length > 0) {\n            setClassId(classes[0]['id'])\n        }\n    }, [classes])\n\n    return (\n        <div className='popup-container'>\n            <div className='popup'>\n                <form onSubmit={ submitHandler }>\n                    <label>title</label>\n                    <br />\n                    <input\n                        type='text'\n                        className='custom-input mb-3'\n                        value={ title }\n                        onChange={(e) => setTitle(e.target.value)}\n                        required\n                    >\n                    </input>\n                    <br />\n                    <label>class</label>\n                    <br />\n                    <select\n                        name='class'\n                        id='class'\n                        className='custom-select my-custom-select class-select'\n                        value={ classId }\n                        onChange={ (e) => setClassId(e.target.value)}\n                        required\n                        >\n                            { (classes && classes.length !== 0) && classes.map((classOption) => (\n                                <option\n                                    key={ classOption.id }\n                                    value={ classOption.id }\n                                >\n                                    { classOption.title }\n                                </option>\n                            ))}\n                    </select>\n                    <br />\n                    <label>type of task</label>\n                    <br />\n                    <select\n                        name='type'\n                        id='type'\n                        className='custom-select my-custom-select class-select'\n                        value={ taskType }\n                        onChange={ (e) => setTaskType(e.target.value)}\n                        required\n                        >\n                            <option value='reading'>reading</option>\n                            <option value='test'>test</option>\n                            <option value='assignment'>assignment</option>\n                            <option value='meeting'>meeting</option>\n                    </select>\n                    <br />\n                    <label>day</label>\n                    <br />\n                    <select\n                        name='day'\n                        id='day'\n                        className='custom-select my-custom-select class-select'\n                        value={ day }\n                        onChange={ (e) => setDay(e.target.value)}\n                        required\n                        >\n                            <option value='0'>monday</option>\n                            <option value='1'>tuesday</option>\n                            <option value='2'>wednesday</option>\n                            <option value='3'>thursday</option>\n                            <option value='4'>friday</option>\n                            <option value='5'>saturday</option>\n                            <option value='6'>sunday</option>\n                    </select>\n                    <br />\n                    <label>time</label>\n                    <br />\n                    <input \n                        type='number'\n                        name='hour'\n                        id='hour'\n                        min='1'\n                        max='12'\n                        className='custom-input mb-3 mr-1 time-input'\n                        value={ hour }\n                        onChange={ (e) => setHour(e.target.value)}\n                        required\n                    >\n                    </input>:\n                    <input \n                        type='number'\n                        name='minute'\n                        id='minute'\n                        min='0'\n                        max='60'\n                        className='custom-input mb-3 ml-1 time-input'\n                        value={ minute }\n                        onChange={ (e) => setMinute(e.target.value)}\n                        required\n                    >\n                    </input>\n                    <br />\n                    <select\n                        name='am'\n                        id='am'\n                        className='custom-select my-custom-select am-select'\n                        value={ am }\n                        onChange={ (e) => setAm(e.target.value)}\n                        required\n                    >\n                        <option\n                            value='true'\n                        >\n                            am\n                        </option>\n                        <option\n                            value='false'\n                        >\n                            pm\n                        </option>\n                    </select>\n                    <br />\n                    <div className='mt-3 button-float-right'>\n                        <span onClick={ () => setOpenAdd(!openAdd) } className='blue-link'>cancel</span>\n                        <button type='submit' className='button-custom button-custom-blue ml-3'>add</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default AddTask","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { updateTask } from '../actions/taskActions'\n\nfunction EditTask({ openEdit, setOpenEdit, newTasks, setNewTasks, newTasksIds, setNewTasksIds, deletedTasks, setDeletedTasks }) {\n\n    const weekClasses = useSelector(state => state.weekClasses)\n    const { loading, classes, error } = weekClasses\n\n    const [title, setTitle] = useState('')\n    const [classId, setClassId] = useState(classes[0]['id'])\n    const [taskType, setTaskType] = useState('reading')\n    const [day, setDay] = useState('0')\n    const [hour, setHour] = useState(12)\n    const [minute, setMinute] = useState(59)\n    const [am, setAm] = useState(false)\n\n    const taskToEdit = useSelector(state => state.taskToEdit)\n    const { loading: toEditLoading , task, error: toEditError } = taskToEdit\n\n    const dispatch = useDispatch()\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(updateTask(title, classId, taskType, day, hour, minute, am, { newTasks, setNewTasks, newTasksIds, setNewTasksIds }))\n        setOpenEdit(!openEdit)\n    }\n\n    useEffect(() => {\n        if (task) {\n            setTitle(task.title)\n            setClassId(task.class_name)\n            setTaskType(task.type)\n            setDay(task.day)\n            setHour(task.time_hour)\n            setMinute(task.time_minute)\n            setAm(task.am)\n        }\n    }, [task])\n\n    return (\n        <div className='popup-container'>\n            <div className='popup'>\n                <form onSubmit={ submitHandler }>\n                    <label>title</label>\n                    <br />\n                    <input\n                        type='text'\n                        className='custom-input mb-3'\n                        value={ title }\n                        onChange={(e) => setTitle(e.target.value)}\n                        required\n                    >\n                    </input>\n                    <br />\n                    <label>class</label>\n                    <br />\n                    <select\n                        name='class'\n                        id='class'\n                        className='custom-select my-custom-select class-select'\n                        value={ classId }\n                        onChange={ (e) => setClassId(e.target.value)}\n                        required\n                        >\n                            { (classes && classes.length !== 0) && classes.map((classOption) => (\n                                <option\n                                    key={ classOption.id }\n                                    value={ classOption.id }\n                                >\n                                    { classOption.title }\n                                </option>\n                            ))}\n                    </select>\n                    <br />\n                    <label>type of task</label>\n                    <br />\n                    <select\n                        name='type'\n                        id='type'\n                        className='custom-select my-custom-select class-select'\n                        value={ taskType }\n                        onChange={ (e) => setTaskType(e.target.value)}\n                        required\n                        >\n                            <option value='reading'>reading</option>\n                            <option value='test'>test</option>\n                            <option value='assignment'>assignment</option>\n                            <option value='meeting'>meeting</option>\n                    </select>\n                    <br />\n                    <label>day</label>\n                    <br />\n                    <select\n                        name='day'\n                        id='day'\n                        className='custom-select my-custom-select class-select'\n                        value={ day }\n                        onChange={ (e) => setDay(e.target.value)}\n                        required\n                        >\n                            <option value='0'>monday</option>\n                            <option value='1'>tuesday</option>\n                            <option value='2'>wednesday</option>\n                            <option value='3'>thursday</option>\n                            <option value='4'>friday</option>\n                            <option value='5'>saturday</option>\n                            <option value='6'>sunday</option>\n                    </select>\n                    <br />\n                    <label>time</label>\n                    <br />\n                    <input \n                        type='number'\n                        name='hour'\n                        id='hour'\n                        min='1'\n                        max='12'\n                        className='custom-input mb-3 mr-1 time-input'\n                        value={ hour }\n                        onChange={ (e) => setHour(e.target.value)}\n                        required\n                    >\n                    </input>:\n                    <input \n                        type='number'\n                        name='minute'\n                        id='minute'\n                        min='0'\n                        max='60'\n                        className='custom-input mb-3 ml-1 time-input'\n                        value={ minute }\n                        onChange={ (e) => setMinute(e.target.value)}\n                        required\n                    >\n                    </input>\n                    <br />\n                    <select\n                        name='am'\n                        id='am'\n                        className='custom-select my-custom-select am-select'\n                        value={ am }\n                        onChange={ (e) => setAm(e.target.value)}\n                        required\n                    >\n                        <option\n                            value='true'\n                        >\n                            am\n                        </option>\n                        <option\n                            value='false'\n                        >\n                            pm\n                        </option>\n                    </select>\n                    <br />\n                    <div className='mt-3 button-float-right'>\n                        <span onClick={ () => setOpenEdit(!openEdit) } className='blue-link'>cancel</span>\n                        <button type='submit' className='button-custom button-custom-blue ml-3'>edit</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default EditTask","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link, useParams } from 'react-router-dom';\n\nimport { getBoardFromWeek, getClassesFromWeek, getWeek } from '../actions/weekActions';\n\nimport Loader from '../components/Loader'\nimport DayContainer from '../components/DayContainer'\nimport AddTask from '../components/AddTask'\nimport EditTask from '../components/EditTask'\n\nfunction BoardScreen({ history }) {\n\n    const [newTasks, setNewTasks] = useState([])\n    const [newTasksIds, setNewTasksIds] = useState([])\n    const [deletedTasks, setDeletedTasks] = useState([])\n\n    const [openAdd, setOpenAdd] = useState(false)\n    const [openEdit, setOpenEdit] = useState(false)\n\n    const id = useParams()['id']\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { loading, userInfo, error } = userLogin\n\n    const boardView = useSelector(state => state.boardView)\n    const { loading: boardLoading, board, error: boardError } = boardView\n\n    const weekView = useSelector(state => state.weekView)\n    const { loading: weekLoading, week, error: weekError } = weekView\n\n    const weekDays = useSelector(state => state.weekDays)\n    const { days } = weekDays\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        } else {\n            dispatch(getBoardFromWeek(id))\n            dispatch(getWeek(id))\n            dispatch(getClassesFromWeek(id))\n        }\n    }, [history, userInfo, dispatch, id])\n\n    return (\n        <div className='main-container'>\n            { (loading || boardLoading || weekLoading) && <Loader /> }\n            { openAdd && <AddTask openAdd={ openAdd } setOpenAdd={ setOpenAdd } newTasks={ newTasks } setNewTasks={ setNewTasks } /> }\n            { openEdit && <EditTask openEdit={ openEdit } setOpenEdit={ setOpenEdit } newTasks={ newTasks } setNewTasks={ setNewTasks } newTasksIds={ newTasksIds } setNewTasksIds={ setNewTasksIds } deletedTasks={ deletedTasks } setDeletedTasks={ setDeletedTasks }/> }\n            <div className='main-inner-container'>\n                <Link to={ (board && !boardLoading) && `/board/${board.id}` } className='blue-link'>\n                        <i className=\"far fa-long-arrow-left\"></i> back\n                </Link>\n                <button onClick={ () => setOpenAdd(!openAdd) } className='button-custom button-custom-blue button-float-right'>add task</button>\n                <div className='title-container'>\n                    <p className='mb-0'>{ (board && !boardLoading) && board.title }</p>\n                    <p className='lg-text bold-text'>{ days && days[0] + ' - ' + days[6]}</p>\n                </div>\n                <DayContainer openEdit={ openEdit } setOpenEdit={ setOpenEdit } newTasks={ newTasks } setNewTasks={ setNewTasks } newTasksIds={ newTasksIds } setNewTasksIds={ setNewTasksIds } deletedTasks={ deletedTasks } setDeletedTasks={ setDeletedTasks } />\n            </div>\n        </div>\n    )\n}\n\nexport default BoardScreen","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { logout } from '../actions/userActions'\n\nfunction Navbar() {\n\n    const [collapsed, setCollapsed] = useState(true)\n    const [dimensions, setDimensions] = useState({ \n        height: window.innerHeight,\n        width: window.innerWidth\n      })\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { loading, userInfo, error } = userLogin\n\n    const dispatch = useDispatch()\n    \n    useEffect(() => {\n        function handleResize() {\n          setDimensions({\n            height: window.innerHeight,\n            width: window.innerWidth\n          })\n        \n    }\n    \n        window.addEventListener('resize', handleResize)\n    \n        return _ => {\n          window.removeEventListener('resize', handleResize)\n        \n        }\n    })\n\n    return (\n        <div>\n            {dimensions.width > 800 ?\n                <div className='navbar-custom'>\n                    <ul className='navbar-custom-nav'>\n                        <div className='navbar-custom-left'>\n                            <li className='nav-item'>\n                                <Link to='/' className='white-link'>\n                                    <i className=\"fal fa-graduation-cap logo\"></i><span className='headline-text'>plnr</span>\n                                </Link>\n                            </li>\n                        </div>\n\n                        { userInfo && \n                            <div className='navbar-custom-right'>\n                                <li className='nav-item'>\n                                    <Link to='/' className='nav-link white-link'>boards</Link>\n                                </li>\n\n                                <li className='nav-item'>\n                                    <button onClick={ () => dispatch(logout()) } className='button-custom button-custom-white'>logout</button>\n                                </li>\n                            </div>\n                        }\n                    </ul>\n                </div>\n            :\n                <div className='navbar-custom'>\n                    <ul className='navbar-custom-nav navbar-custom-nav-mobile'>\n                        <li className='nav-item nav-mobile-top'>\n                            <Link to='/' className='white-link'>\n                                <i className=\"fal fa-graduation-cap logo logo-mobile\"></i><span className='headline-text logo-mobile'>plnr</span>\n                            </Link>\n\n                            { userInfo && \n                                <button \n                                    className='hamburger'\n                                    onClick={() => { setCollapsed(!collapsed) } }\n                                >\n                                    <i className=\"far fa-bars\"></i>\n                                </button>\n                            }\n                        </li>\n                        \n                        { (!collapsed && userInfo) &&\n                            <div>\n                                <li className='nav-item-mobile'>\n                                    <Link to='/' onClick={ () => { setCollapsed(!collapsed) }} className='nav-link white-link'>boards</Link>\n                                </li>\n\n                                <li className='nav-item-mobile'>\n                                    <button onClick={ () => { setCollapsed(!collapsed); dispatch(logout())} } className='button-custom button-custom-white'>logout</button>\n                                </li>\n                            </div>\n                        }\n                    </ul>\n                </div>\n            }\n        </div>\n    )\n}\n\nexport default Navbar","import React from 'react'\nimport { HashRouter as Router, Route } from 'react-router-dom'\n\nimport BoardScreen from './screens/BoardScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport BoardViewScreen from './screens/BoardViewScreen'\nimport WeekScreen from './screens/WeekScreen'\n\nimport Navbar from \"./components/Navbar\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Navbar />\n        <Route path='/' component={ BoardScreen } exact />\n        <Route path='/board/:id' component={ BoardViewScreen } />\n        <Route path='/week/:id' component={ WeekScreen } />\n        <Route path='/login' component={ LoginScreen } />\n        <Route path='/register' component={ RegisterScreen } />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={ store }>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}